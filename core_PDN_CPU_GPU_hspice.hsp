* Top level spice file 

.option post=1
*.chkanode type=gate dv=0.5*pvdd report=active
.option parhier = local 
.option measform = 1
.option lis_new
.option post probe

*************************************** User defined functions ****************
.param V_meas(node, ref) = 'v(node) - v(ref)'


*************************************** Input Models**************************
	***** define load current source model used in die model *****

	*.inc ./hspice_inc/out_curr_profile_CPU_55ns_13A_1000ns_cnst_500ns_9_13_rand_55ns_rampDown_noClk.txt

	*.inc ./hspice_inc/out_curr_profile_CPU_72ns_13A_1000ns_cnst_500ns_9_13_rand_72ns_rampDown_noClk.txt
	*.inc ./hspice_inc/out_curr_profile_CPU_144ns_13A_1000ns_cnst_500ns_9_13_rand_144ns_rampDown_noClk.txt

	*.inc ./hspice_inc/out_curr_profile_CPU_55ns_11A_1000ns_cnst_500ns_9_13_rand_55ns_rampDown_noClk.txt
	*.inc ./hspice_inc/out_curr_profile_CPU_55ns_9A_1000ns_cnst_500ns_6_9_rand_55ns_rampDown_noClk.txt
	
	* .inc ./hspice_inc/out_curr_profile_CPU_55ns_17A_2000ns_cnst_1000ns_12_17_rand_55ns_rampDown_noClk.txt
* .param pwl_file_cpu = str('./hspice_inc/out_curr_profile_CPU_55ns_17A_2000ns_cnst_1000ns_12_17_rand_55ns_rampDown_noClk.csv')		*** 9us

* .param pwl_file_cpu = str('./hspice_inc/curr_profile_cpu_20231010_2p5GHz_v2.txt.csv') 			*** NOTE: 10/10 current profile 	, length 1us
* .param pwl_file_cpu = str('./hspice_inc/curr_profile_cpu_20231010_2p5GHz_v3.txt.csv') 			*** NOTE: 10/10 current profile , length 7us
*.param pwl_file_cpu = str('./hspice_inc/curr_profile_cpu_20231010_2p0GHz_v2p2.txt.csv') 			*** NOTE: 10/10 current profile , length 1us
* .param pwl_file_cpu = str('./hspice_inc/curr_profile_cpu_20231010_2p0GHz_v3p2.txt.csv') 			*** NOTE: 10/10 current profile , length 8us
* .param pwl_file_cpu = str('./hspice_inc/curr_profile_cpu_20231018_2p5GHz_1us.txt.csv') 			*** NOTE: 10/18 current profile
* .param pwl_file_cpu = str('./hspice_inc/curr_profile_cpu_20231018_2p5GHz_L3_6p5us.txt.csv') 			*** NOTE: 10/18 current profile

* .param pwl_file_cpu = str('./hspice_inc/curr_profile_CPU_1027.txt.csv') 			*** NOTE: 10/27 current profile
* .param pwl_file_cpu = str('./hspice_inc/curr_profile_CPU_2p5G_231106.txt.csv') 			*** NOTE: 11/06 current profile
* .param pwl_file_cpu = str('./hspice_inc/curr_profile_CPU_2p0G_231108.txt.csv') 			*** NOTE: 11/08 current profile
* .param pwl_file_cpu = str('./hspice_inc/curr_profile_CPU_2p5G_240105.txt.csv') 			*** NOTE: 24/01/04 current profile, 3us 
* .param pwl_file_cpu = str('./hspice_inc/curr_profile_CPU_2p5G_240105_timeX10.txt.csv') 			*** NOTE: 24/01/04 current profile, time slow down by 10x, 14us
* .param pwl_file_cpu = str('./hspice_inc/curr_profile_CPU_2p5G_dtX14_240105.txt.csv') 			*** NOTE: 24/01/04 current profile, time slow down by 14x, 14us

* .param pwl_file_cpugpuAll = str('./hspice_inc/curr_profile_CPU_2p5G_240105_0p822V_UpDown_x7.txt.csv') 			*** NOTE: 240131 current profile, time slow down by 7x for up/down only, 5us
* .param pwl_file_cpugpuAll = str('./hspice_inc/curr_profile_CPU_2p5G_240105_0p822V_UpDown_x7_v2.txt.csv')			*** NOTE: 240131 current profile, time slow down by 7x for up/down only, extend mid 5 times, 8us

* .param pwl_file_cpugpuAll = str('./hspice_inc/curr_profile_CPU_2p5G_240216_0p8V_UpDown_x7_PwrX1p65.txt.csv')		*** NOTE: 240131 current profile, time slow down by 7x for up/down only, extend mid 5 times, 10us, pwr x 1.1x 1.5 (MAM-326)
* .param pwl_file_cpugpuAll = str('./hspice_inc/curr_profile_CPU_2p5G_240216_0p8V_UpDown_x3p5_PwrX1p65.txt.csv')		*** NOTE: 240131 current profile, time slow down by 3.5x for up/down only, extend mid 5 times, 10us, pwr x 1.1x 1.5 (MAM-326)
* .param pwl_file_cpugpuAll = str('./hspice_inc/curr_profile_CPU_2p5G_240216_0p8V_UpDown_x1p75_PwrX1p65.txt.csv')		*** NOTE: 240131 current profile, time slow down by 1.75x for up/down only, extend mid 5 times, 10us, pwr x 1.1x 1.5 (MAM-326)
* .param pwl_file_cpugpuAll = str('./hspice_inc/curr_profile_CPU_2p5G_240216_0p8V_UpDown_x1_PwrX1p65.txt.csv')			*** NOTE: 240131 current profile, time slow down by 1.x for up/down only, extend mid 5 times, 10us, pwr x 1.1x 1.5 (MAM-326)

* .param pwl_file_cpugpuAll = str('./hspice_inc/curr_profile_CPU_Ting_8A_17ns_240314.txt.csv')	*** Ting, 4W * 150% / 0.75V, dt=17ns 

.param pwl_file_cpugpuAll = str('./hspice_inc/curr_profile_CPU_FSDB240327_2CoreX7_magX1p36_5us.txt.csv')	*** NOTE: 240327 Andes new profile, 2xcore ramp x 7

* .param pwl_file_cpu2Core_x1p2  	= str('./hspice_inc/curr_profile_CPU_FSDB240327_SteadyStateX4_2Core_scale1p2_8us.txt.csv')	*** NOTE: 240327 Andes new profile, 2xcore only, scale by 1.2 to simulate pwr of 12 cores in 5 paritions
* .param pwl_file_cpu2Core_DSU 	= str('./hspice_inc/curr_profile_CPU_FSDB240327_SteadyStateX4_DSU_2Core_8us.txt.csv')		*** NOTE: 240327 Andes new profile, 2xcore + DSU  
.param pwl_file_cpu2Core_x1p2  	= str('./hspice_inc/curr_profile_CPU_FSDB240327_SteadyStateX6_2Core_scale1p2_11us.txt.csv')	*** NOTE: 240327 Andes new profile, 2xcore only, scale by 1.2 to simulate pwr of 12 cores in 5 paritions, steady state duration x6
.param pwl_file_cpu2Core_DSU 	= str('./hspice_inc/curr_profile_CPU_FSDB240327_SteadyStateX6_DSU_2Core_11us.txt.csv')		*** NOTE: 240327 Andes new profile, 2xcore + DSU, steady state duration x6  

* .param pwl_file_cpu2Core_x1p2  	= str('./hspice_inc/curr_profile_CPU_FSDB240327_SteadyStateX6_2Core_x2p71.txt.csv')	*** NOTE: 240327 Andes new profile, 2xcore only, scale by 2.71 to simulate pwr of 12 cores in 5 paritions, steady state duration x6
* .param pwl_file_cpu2Core_DSU 	= str('./hspice_inc/curr_profile_CPU_FSDB240327_SteadyStateX6_DSU_2xCore_x2p26.txt.csv')		*** NOTE: 240327 Andes new profile, 2xcore + DSU, scale by 2.26 steady state duration x6  


	*** GPU profile
* .inc ./hspice_inc/out_curr_profile_GPU_20ns_2p5A_5000ns_cnst_noClk.txt
* .param pwl_file_gpu_1Of4 		= str('./hspice_inc/curr_profile_GPU_1of4_10W_Rt100ns_RandPP40Pct_8us.txt.csv')		*** NOTE: 240328, GPU 10W, rise time 100ns, rand switch +-20%, need 4 to build whole gpu pwr   
* .param pwl_file_gpu_1Of4 		= str('./hspice_inc/curr_profile_GPU_1of4_10W_Rt100ns_RandPP20Pct_8us.txt.csv')		*** NOTE: 240328, GPU 10W, rise time 100ns, rand switch +-10%, need 4 to build whole gpu pwr 
* .param pwl_file_gpu_1Of4 		= str('./hspice_inc/curr_profile_GPU_1of4_12W_Rt100ns_RandPP30Pct_8us.txt.csv')		*** NOTE: 240328, GPU 12.3W, rise time 100ns, rand switch +-15%, need 4 to build whole gpu pwr 
.param pwl_file_gpu_1Of4 		= str('./hspice_inc/curr_profile_GPGPU_1Of4_240603.txt.csv')		*** NOTE: 240603, GPGPU pwr profile from Verisilicon, steady state 10W, scaled to TT 105C by Adrian 


		*** idle current
		.param pwl_file_quiet = str('./hspice_inc/curr_quiet_30us.txt.csv')
		
	***** define die model *****
					* .inc ./hspice_inc/model_die_CPU.inc 
					* .inc ./hspice_inc/model_die_GPU.inc 

.inc ./hspice_inc/cpm_cpu_3x4_240313.sp 	*** Andes 4x2 CPM model 240313

		.subckt model_die_typ
		+ pin_bump ref_gnd C_die=100n R_die_1=1.25m R_die_2=RESMIN R_leak=0.84 pwl_file_in = str(pwl_file_quiet)	delay= 0.	

		R_die_1_ 	pin_bump	2	R_die_1
		R_die_2_	2		3	R_die_2
		C_die_		3		ref_gnd	C_die 
		R_leak_		pin_bump	ref_gnd	R_leak	
		IcurrSrc	pin_bump	ref_gnd	PWL  pwlfile = str(pwl_file_in)  td= delay   *** add 'R' if repeat
					.ends

*** filter for measurement
.subckt meas_filter	
+ pin_in  ref_gnd 	hf  lf 

E_meas pin_meas ref_gnd  pin_in ref_gnd	1.0

C_hf pin_meas	hf  	160.p		
R_hf hf         ref_gnd 1k

R_lf pin_meas	lf		1k
C_lf lf 		ref_gnd	160.p
.ends meas_filter

	***** define pkg model *****
	*.inc ./hspice_inc/C_v1_forCPU_wBF_wDSU_wGPU_RmLF_1e4Hz_IdEM.cir
	*.param pkg_model = str('C_v1_forCPU_wBF_wDSU_wGPU_RmLF_1e4Hz_IdEM')

	* .inc ./hspice_inc/Mam_MCM_Andes_0724_cpugpu_cut3_run2_IdEM.cir
	* .param pkg_model = str('Mam_MCM_Andes_0724_cpugpu_cut3_run2_IdEM')

	.inc ./hspice_inc/Mam_MCM_L12_231215c_mod48_CPU_GPU_02_IdEM_s25p.cir
	
	.inc ./hspice_inc/cpu_0206_2_IdEM.cir		***  Zijie mock up 240207 w/  3x embedded ecap EC2047
	.inc ./hspice_inc/Mam_MCM_L12_202403012ate_a_CPU_jgwei_IdEM.cir	*** Andes 240328 ploc partitioned CPU GPU 
	.inc ./hspice_inc/Mam_MCM_L12_BH9_Ballv0p87a_BPIv0072_20240417_1_20240417ate_a_CPU_cut_IdEM.cir	*** Andes 240424 CPU pkg, w/ L12 extended 
	.inc ./hspice_inc/cpu_lsio_240502_IdEM.cir	** zijie added BGA balls to pkg 
	.inc ./hspice_inc/CPU_GPU_pkg_CPU_lsio_240502_reduModel_IdEM_s13p.cir
	.inc ./hspice_inc/CPU_GPU_pkg_CPU_lsio_240522_BgaX4_reduModel_IdEM_s15p.cir
		
	***** define PCB model *****
	*.inc ./hspice_inc/ACM2_PT00547399_A_01_cut_CPU_PSI_RmLF_manip_IdEM0p5.cir 
	*.param PCB_model = str('ACM2_PT00547399_A_01_cut_CPU_PSI_RmLF_manip_IdEM0p5')

	*.inc ./hspice_inc/ACM2_PT00547399_A_01_Layout_Study_20230626_cut_CPU_RmDC_mani_IdEM_0p5.cir		*** 0626 Cadera improvement
	*.param PCB_model = str('ACM2_PT00547399_A_01_Layout_Study_20230626_cut_CPU_RmDC_mani_IdEM_0p5')

	*.inc ./hspice_inc/ACM2_PT00547399_A_01_Layout_Study_20230626_cut_CPU_RmL5L10_RmDC_mani_IdEM0p5.cir 	*** 0626, but remove L5, L10 pwr shape
	*.param PCB_model = str('ACM2_PT00547399_A_01_Layout_Study_20230626_cut_CPU_RmL5L10_RmDC_mani_IdEM0p5')

	*.inc ./hspice_inc/MAMMOTH_PCB_230721_CPU_GPU_merge_discrete_IdEM_0p5.cir
	*.param PCB_model = str('MAMMOTH_PCB_230721_CPU_GPU_merge_discrete_IdEM_0p5')

	*.inc ./hspice_inc/MAMMOTH_PCB_230721_CPU_GPU_merge_discrete_rmDC_manip_IdEM_0p5.cir
	*.param PCB_model = str('MAMMOTH_PCB_230721_CPU_GPU_merge_discrete_rmDC_manip_IdEM_0p5')

	* .inc ./hspice_inc/MAMMOTH_PCB_230803_CPU_GPU_merge_discrt_DCrm_manip_IdEM.cir			*** POR 
	* .param PCB_model = str('MAMMOTH_PCB_230803_CPU_GPU_merge_discrt_DCrm_manip_IdEM')

	* .inc ./hspice_inc/MAMMOTH_PCB_230925_CPU_GPU_merge_0927_jgwei_DCrm_manip_IdEM.cir					***0927, CPU PMIC at south of SoC 
	* .param PCB_model = str('MAMMOTH_PCB_230925_CPU_GPU_merge_0927_jgwei_DCrm_manip_IdEM')

	* .inc ./hspice_inc/MAMMOTH_PCB_230925_CPU_GPU_merge_0927_jgwei_RmPwrL4L9_DCrm_manip_IdEM.cir		***0927, CPU PMIC at south of SoC, L4/9 pwr cut off
	* .param PCB_model = str('MAMMOTH_PCB_230925_CPU_GPU_merge_0927_jgwei_RmPwrL4L9_DCrm_manip_IdEM')	

	* .inc ./hspice_inc/MAMMOTH_PCB_231013_CPU_GPU_merge_ORIG_cutL10L14_rmLF_manip_IdEM.cir					*** 1018, PMIC at south of SoC, PTH power vias 
	* .param PCB_model = str('MAMMOTH_PCB_231013_CPU_GPU_merge_ORIG_cutL10L14_rmLF_manip_IdEM')
	* .inc ./hspice_inc/MAMMOTH_PCB_231023_2_CPU_GPU_merge_pmic_left_jgwei_rmLF_manip_IdEM.cir				*** 1025, PMIC at west of SoC, PTH power vias 
	* .param PCB_model = str('MAMMOTH_PCB_231023_2_CPU_GPU_merge_pmic_left_jgwei_rmLF_manip_IdEM')

	.inc ./hspice_inc/MAMMOTH_PCB_231023_1_CPU_GPU_merge_stk1025_jgwei_rmLF_manip_IdEM.cir				*** 1025, PMIC at south of SoC, PTH power vias, 1025 new PCB stackup, 
	.param PCB_model = str('MAMMOTH_PCB_231023_1_CPU_GPU_merge_stk1025_jgwei_rmLF_manip_IdEM')	
	* .inc ./hspice_inc/MAMMOTH_PCB_231023_2_CPU_GPU_merge_pmic_left_stk1025_jgwei_rmLF_manip_IdEM.cir		*** 1025, PMIC at west of SoC, PTH power vias, 1025 new PCB stackup, 
	* .param PCB_model = str('MAMMOTH_PCB_231023_2_CPU_GPU_merge_pmic_left_stk1025_jgwei_rmLF_manip_IdEM')
	
	.inc ./hspice_inc/ACM3_CPU_PDN_2_24_2024.cir	*** ACM3 CPU PCB fr Kavoos 240225
	.inc ./hspice_inc/ACM3_CPU_PDN_3_4_24_105C_Siwave_step1EnforceDCwt0p5_step2Direct.cir	*** ACM3 CPU PCB fr Kavoos 240304, 105C deg
	.inc ./hspice_inc/ACM3_CPU_PDN_3_11_2024_105C_IdEM.cir			*** ACM3 CPU PCB from Kavoos 240311, 105C 
	.inc ./hspice_inc/acm3_cpu_pcb_240312_105C_100uF_IdEM.cir		*** ACM3 CPU PCB, Jiangong, 240312 0327, 105C, Hspice redu 
	.inc ./hspice_inc/acm3_cpu_pcb_240312_105C_100uFx6_220uFx6_v2_IdEM.cir	*** added more 6x220uF caps near BGA edge 
	.inc ./hspice_inc/acm3_cpu_pcb_240312_105C_100uFx6_220uFx6_v3_IdEM.cir	*** use 6x220uF bulk caps near PMIC, replacing 100uFs 
	.inc ./hspice_inc/acm3_cpu_pcb_240402_105C_6x220uF_IdEM.cir				*** 240402, L9 added, L3/5/7/9 extended south of CPU, use 6x220uF bulk caps near PMIC
	.inc ./hspice_inc/ACM3_05072024_CPU_PDN_BGAgrpX4_IdEM.cir			*** 240507, BGA break into 4 grps

			* .inc ./hspice_inc/ACM3_122323_nne_cut_reduce_v2_manip_s5p.cir				*** 231221 ACM3 PCB for NNE , reduced to 5 ports, just for test 
	
	
*************************************** Input params **************************
.param is_use_ecap_ebed = 0		*** value: 0 or 1
.param is_MIM = 0

.param die_model_sig = 0		*** value: 0 for CPM, or 1 for single die 
.param single_bga_grp = 0		*** value: 0 if use multiple BGA grps, 1 if use single BGA grp

.param Vdd 	= 0.75
.param induct_eqvlnt_r = 0.14m	*** DCR of inductor of ALL phases

	* .param CPU_die = str('model_die_lumped_cpu')
	* .param GPU_die = str('model_die_lumped_gpu')

	* .param Cdie_cpu	 = '271.n' 				
	* .param Rdie_cpu	 = '0.055m'
.param Rleak_cpu = 0.232

	* .param Cdie_gpu  = '263.n'	
	* .param Rdie_gpu  = '0.057m'
.param Rleak_gpu = 1.27


	*** exp. to turn off GPU die model
	*.param Cdie_gpu	= '0.n'
	*.param Rdie_gpu	= '1.e9m'
	*.param Rleak_gpu= 1.e9
	
.param is_ac_run = 0
	
.param tStep	= 10.p
.param tStop	= 11.u
.tran tStep tSTOP 
	
*************************************** cap model *****************************
.inc /data/home/jiangongwei/work/cap_models.hsp

*************************************** PMIC **********************************
.subckt PMIC_model
+ pin_out ref_gnd vdd_pmic = 0.75
	VshortPMIC	pin_out	ref_gnd	vdd_pmic
.ends 

Vref_gnd 	ref_gnd		0	0.				*** opt 1/2 ideal PMIC w/o remote sense feedback
	*E_fdbk	ref_gnd	0	VCVS DELAY pmic_pwr pkg_bump_1_0  td=50.n	*** opt 2/2 VCVS to model feedback

*VshortPMIC	pmic_pwr	ref_gnd	Vdd		*** can be switched to PMIC model 
xblk_PMIC pmic_pwr_raw ref_gnd PMIC_model vdd_pmic = 'Vdd'  		

*** resistance of pmic output cap
r_pmic_l_eqv pmic_pwr_raw pmic_pwr induct_eqvlnt_r
	
*************************************** Socket ********************************
Rskt	bga_pcb		bga_pkg		0.				*** can add socket model 

*************************************** PCB ***********************************
.if ( 1 )	*** ACM3 CPU PCB 
	.if (single_bga_grp != 1)
		Xblk_PCB
		+ pmic_pwr
		+ pmic_pwr
		+ bga_pcb_south_col0
		+ bga_pcb_south_col1
		+ bga_pcb_north_col0
		+ bga_pcb_north_col1
		+ ref_gnd
		+ ACM3_05072024_CPU_PDN_BGAgrpX4_IdEM
	.endif 
	.if (single_bga_grp == 1)
		Xblk_PCB
		+ pmic_pwr
		+ pmic_pwr
		+ bga_pcb
		+ bga_pcb
		+ bga_pcb
		+ bga_pcb
		+ ref_gnd
		+ ACM3_05072024_CPU_PDN_BGAgrpX4_IdEM
	.endif 	
	
	
		* Xblk_PCB
		* + pmic_pwr
		* + pmic_pwr
		* + bga_pcb
		* + ref_gnd
		* * + ACM3_CPU_PDN_2_24_2024
		* * + ACM3_CPU_PDN_3_11_2024_105C_IdEM		*** pmic port GND/pwr terminal flipped, hence need to use negative vdd
		* * + acm3_cpu_pcb_240312_105C_100uF_IdEM		*** pmic port GND/pwr terminal flipped, hence need to use negative vdd
		* * + acm3_cpu_pcb_240312_105C_100uFx6_220uFx6_v2_IdEM	*** pmic port GND/pwr terminal flipped, hence need to use negative vdd
		* * + acm3_cpu_pcb_240312_105C_100uFx6_220uFx6_v3_IdEM	*** pmic port GND/pwr terminal flipped, hence need to use negative vdd
		* + acm3_cpu_pcb_240402_105C_6x220uF_IdEM


		* Xblk_PCB
		* + bga_pcb
		* + pmic_pwr
		* + pmic_pwr
		* + ref_gnd	
		* + ACM3_CPU_PDN_3_4_24_105C_Siwave_step1EnforceDCwt0p5_step2Direct
	
.endif 		*** ACM3 CPU PCB fr Kavoos end 


*************************************** Pkg ***********************************
.if ( 1 )	*** pkg model used in SIMPLIS, agree well with unreduced model 
	Xblk_pkg
	+ pkg_bump_cpu_0_0 
	+ pkg_bump_cpu_1_0
	+ pkg_bump_cpu_2_0
	+ pkg_bump_cpu_0_1
	+ pkg_bump_cpu_1_1
	+ pkg_bump_cpu_2_1 
	+ pkg_bump_gpu_0_2
	+ pkg_bump_gpu_1_2
	+ pkg_bump_cpu_2_2
	+ pkg_bump_gpu_0_3
	+ pkg_bump_gpu_1_3	
	+ bga_pcb_south_col0
	+ bga_pcb_north_col0
	+ bga_pcb_south_col1
	+ bga_pcb_north_col1
	+ ref_gnd
	+ CPU_GPU_pkg_CPU_lsio_240522_BgaX4_reduModel_IdEM_s15p			



		* Xblk_pkg
		* + pkg_bump_cpu_0_0 
		* + pkg_bump_cpu_1_0
		* + pkg_bump_cpu_2_0
		* + pkg_bump_cpu_0_1
		* + pkg_bump_cpu_1_1
		* + pkg_bump_cpu_2_1 
		* + pkg_bump_gpu_0_2
		* + pkg_bump_gpu_1_2
		* + pkg_bump_cpu_2_2
		* + pkg_bump_gpu_0_3
		* + pkg_bump_gpu_1_3	
		* + bga_pcb_south
		* + bga_pcb_north
		* + ref_gnd
		* + CPU_GPU_pkg_CPU_lsio_240502_reduModel_IdEM_s13p
.endif 

.if ( 0 )	*** Andes pkg 240507, Zijie added BGA on pkg, jgwei partition in SIwave  conform to CPM ploc numbering
	.if (single_bga_grp != 1)
		Xblk_pkg
		+ bga_pcb_south
		+ bga_pcb_north
		+ pkg_bump_cpu_0_0 
		+ pkg_bump_cpu_1_0
		+ pkg_bump_cpu_2_0
		+ pkg_bump_cpu_0_1
		+ pkg_bump_cpu_1_1
		+ pkg_bump_cpu_2_1 
		+ pkg_bump_gpu_0_2
		+ pkg_bump_gpu_1_2
		+ pkg_bump_cpu_2_2
		+ pkg_bump_gpu_0_3
		+ pkg_bump_gpu_1_3
		+ pkgCap_C1
		+ pkgCap_C18
		+ pkgCap_C19
		+ pkgCap_C20
		+ pkgCap_C21
		+ pkgCap_C2
		+ pkgCap_C3
		+ pkgCap_C4
		+ pkgCap_C5
		+ pkgCap_C6
		+ pkgCap_C7
		+ pkgCap_C7
		+ pkgCap_C8
		+ pkgCap_C8
		+ pkgCap_C9
		+ pkgCap_C9
		+ pkgCap_C10
		+ pkgCap_C10
		+ pkgCap_C11
		+ pkgCap_C11
		+ pkgCap_C12
		+ pkgCap_C12
		+ pkgCap_C13
		+ pkgCap_C13
		+ pkgCap_C14
		+ pkgCap_C14
		+ pkgCap_C15
		+ pkgCap_C15
		+ pkgCap_C16
		+ pkgCap_C16
		+ pkgCap_C17
		+ pkgCap_C17
		+ pkgCap_C22
		+ pkgCap_C23
		+ pkgCap_C24
		+ pkgCap_C25
		+ pkgCap_C26
		+ ref_gnd
		+ cpu_lsio_240502_IdEM
	.endif 
	.if (single_bga_grp == 1)
		Xblk_pkg
		+ bga_pcb
		+ bga_pcb
		+ pkg_bump_cpu_0_0 
		+ pkg_bump_cpu_1_0
		+ pkg_bump_cpu_2_0
		+ pkg_bump_cpu_0_1
		+ pkg_bump_cpu_1_1
		+ pkg_bump_cpu_2_1 
		+ pkg_bump_gpu_0_2
		+ pkg_bump_gpu_1_2
		+ pkg_bump_cpu_2_2
		+ pkg_bump_gpu_0_3
		+ pkg_bump_gpu_1_3
		+ pkgCap_C1
		+ pkgCap_C18
		+ pkgCap_C19
		+ pkgCap_C20
		+ pkgCap_C21
		+ pkgCap_C2
		+ pkgCap_C3
		+ pkgCap_C4
		+ pkgCap_C5
		+ pkgCap_C6
		+ pkgCap_C7
		+ pkgCap_C7
		+ pkgCap_C8
		+ pkgCap_C8
		+ pkgCap_C9
		+ pkgCap_C9
		+ pkgCap_C10
		+ pkgCap_C10
		+ pkgCap_C11
		+ pkgCap_C11
		+ pkgCap_C12
		+ pkgCap_C12
		+ pkgCap_C13
		+ pkgCap_C13
		+ pkgCap_C14
		+ pkgCap_C14
		+ pkgCap_C15
		+ pkgCap_C15
		+ pkgCap_C16
		+ pkgCap_C16
		+ pkgCap_C17
		+ pkgCap_C17
		+ pkgCap_C22
		+ pkgCap_C23
		+ pkgCap_C24
		+ pkgCap_C25
		+ pkgCap_C26
		+ ref_gnd
		+ cpu_lsio_240502_IdEM	
	.endif 

	XpkgCap_C1	pkgCap_C1	ref_gnd		str(mlcc_1uF_0201)
	XpkgCap_C2	pkgCap_C2	ref_gnd		str(mlcc_1uF_0201)
	XpkgCap_C3	pkgCap_C3	ref_gnd		str(mlcc_1uF_0201)
	XpkgCap_C4	pkgCap_C4	ref_gnd		str(mlcc_1uF_0201)
	XpkgCap_C5	pkgCap_C5	ref_gnd		str(mlcc_1uF_0201)
	XpkgCap_C6	pkgCap_C6	ref_gnd		str(mlcc_1uF_0201)
	
	XpkgCap_C7  pkgCap_C7     ref_gnd    pkgCap_C7    ref_gnd str(mlcc_1uF_0402_3T_ft)
	XpkgCap_C8  pkgCap_C8     ref_gnd    pkgCap_C8    ref_gnd str(mlcc_1uF_0402_3T_ft)
	XpkgCap_C9  pkgCap_C9     ref_gnd    pkgCap_C9    ref_gnd str(mlcc_1uF_0402_3T_ft)
	XpkgCap_C10 pkgCap_C10    ref_gnd    pkgCap_C10   ref_gnd str(mlcc_1uF_0402_3T_ft)
	XpkgCap_C11 pkgCap_C11    ref_gnd    pkgCap_C11   ref_gnd str(mlcc_1uF_0402_3T_ft)
	XpkgCap_C12 pkgCap_C12    ref_gnd    pkgCap_C12   ref_gnd str(mlcc_1uF_0402_3T_ft)
	XpkgCap_C13 pkgCap_C13    ref_gnd    pkgCap_C13   ref_gnd str(mlcc_1uF_0402_3T_ft)
	XpkgCap_C14 pkgCap_C14    ref_gnd    pkgCap_C14   ref_gnd str(mlcc_1uF_0402_3T_ft)
	XpkgCap_C15 pkgCap_C15    ref_gnd    pkgCap_C15   ref_gnd str(mlcc_1uF_0402_3T_ft)
	XpkgCap_C16 pkgCap_C16    ref_gnd    pkgCap_C16   ref_gnd str(mlcc_1uF_0402_3T_ft)
	XpkgCap_C17 pkgCap_C17    ref_gnd    pkgCap_C17   ref_gnd str(mlcc_1uF_0402_3T_ft)
	
	XpkgCap_C18         pkgCap_C18   ref_gnd   str(mlcc_10uF_0402)
	XpkgCap_C19         pkgCap_C19   ref_gnd   str(mlcc_10uF_0402)
	XpkgCap_C20         pkgCap_C20   ref_gnd   str(mlcc_10uF_0402)
	XpkgCap_C21         pkgCap_C21   ref_gnd   str(mlcc_10uF_0402)
	XpkgCap_C22         pkgCap_C22   ref_gnd   str(mlcc_10uF_0402)
	XpkgCap_C23         pkgCap_C23   ref_gnd   str(mlcc_10uF_0402)
	XpkgCap_C24         pkgCap_C24   ref_gnd   str(mlcc_10uF_0402)
	XpkgCap_C25         pkgCap_C25   ref_gnd   str(mlcc_10uF_0402)
	XpkgCap_C26         pkgCap_C26   ref_gnd   str(mlcc_10uF_0402)
		
	
.endif 

	
.if ( 0 )	*** Andes pkg 240424, jgwei partition in SIwave  conform to CPM ploc numbering
	Xblk_pkg
	+ pkg_bump_cpu_0_0 
	+ pkg_bump_cpu_1_0
	+ pkg_bump_cpu_2_0
	+ pkg_bump_cpu_0_1
	+ pkg_bump_cpu_1_1
	+ pkg_bump_cpu_2_1 
	+ pkg_bump_gpu_0_2
	+ pkg_bump_gpu_1_2
	+ pkg_bump_cpu_2_2
	+ pkg_bump_gpu_0_3
	+ pkg_bump_gpu_1_3
	+ bga_pkg
	+ bga_pkg
	+ pkgCap_C1
	+ pkgCap_C18
	+ pkgCap_C19
	+ pkgCap_C20
	+ pkgCap_C21
	+ pkgCap_C2
	+ pkgCap_C3
	+ pkgCap_C4
	+ pkgCap_C5
	+ pkgCap_C6
	+ pkgCap_C7
	+ pkgCap_C7
	+ pkgCap_C8
	+ pkgCap_C8
	+ pkgCap_C9
	+ pkgCap_C9
	+ pkgCap_C10
	+ pkgCap_C10
	+ pkgCap_C11
	+ pkgCap_C11
	+ pkgCap_C12
	+ pkgCap_C12
	+ pkgCap_C13
	+ pkgCap_C13
	+ pkgCap_C14
	+ pkgCap_C14
	+ pkgCap_C15
	+ pkgCap_C15
	+ pkgCap_C16
	+ pkgCap_C16
	+ pkgCap_C17
	+ pkgCap_C17
	+ pkgCap_C22
	+ pkgCap_C23
	+ pkgCap_C24
	+ pkgCap_C25
	+ pkgCap_C26
	+ ref_gnd
	+ Mam_MCM_L12_BH9_Ballv0p87a_BPIv0072_20240417_1_20240417ate_a_CPU_cut_IdEM
	
	.if ( 0 )	*** jgwei caps opt
		XpkgCap_C1   		 pkgCap_C1     ref_gnd    ref_gnd  str(mlcc_0p1uF_0204_TDK)
		XpkgCap_C2           pkgCap_C2     ref_gnd    ref_gnd  str(mlcc_0p1uF_0204_TDK)
		XpkgCap_C3           pkgCap_C3     ref_gnd    ref_gnd  str(mlcc_0p1uF_0204_TDK)
		XpkgCap_C4           pkgCap_C4     ref_gnd    ref_gnd  str(mlcc_0p1uF_0204_TDK)
													  
		XpkgCap_C5           pkgCap_C5     ref_gnd    ref_gnd  str(mlcc_0p047uF_0204_TDK)
		XpkgCap_C6           pkgCap_C6     ref_gnd    ref_gnd  str(mlcc_0p047uF_0204_TDK)
		XpkgCap_C7           pkgCap_C7     ref_gnd    ref_gnd  str(mlcc_0p047uF_0204_TDK)
		XpkgCap_C8           pkgCap_C8     ref_gnd    ref_gnd  str(mlcc_0p047uF_0204_TDK)
		XpkgCap_C13          pkgCap_C13     ref_gnd    ref_gnd  str(mlcc_0p047uF_0204_TDK)
		XpkgCap_C14          pkgCap_C14     ref_gnd    ref_gnd  str(mlcc_0p047uF_0204_TDK)
		XpkgCap_C15          pkgCap_C15     ref_gnd    ref_gnd  str(mlcc_0p047uF_0204_TDK)
		XpkgCap_C16          pkgCap_C16     ref_gnd    ref_gnd  str(mlcc_0p047uF_0204_TDK)	
		
		XpkgCap_C9          pkgCap_C9    ref_gnd    pkgCap_C9   ref_gnd str(mlcc_1uF_0402_3T_ft)
		XpkgCap_C10         pkgCap_C10   ref_gnd    pkgCap_C10   ref_gnd str(mlcc_1uF_0402_3T_ft)
		XpkgCap_C11         pkgCap_C11   ref_gnd    pkgCap_C11   ref_gnd str(mlcc_1uF_0402_3T_ft)
		XpkgCap_C12         pkgCap_C12   ref_gnd    pkgCap_C12   ref_gnd str(mlcc_1uF_0402_3T_ft)
		
		XpkgCap_C17  		pkgCap_C17	ref_gnd		str(mlcc_1uF_0204)
		XpkgCap_C18  		pkgCap_C18	ref_gnd		str(mlcc_1uF_0204)
		XpkgCap_C19  		pkgCap_C19	ref_gnd		str(mlcc_1uF_0204)
		XpkgCap_C20  		pkgCap_C20	ref_gnd		str(mlcc_1uF_0204)
		
		XpkgCap_C21         pkgCap_C21   ref_gnd   str(mlcc_10uF_0402)
		XpkgCap_C22         pkgCap_C22   ref_gnd   str(mlcc_10uF_0402)
		XpkgCap_C23         pkgCap_C23   ref_gnd   str(mlcc_10uF_0402)
		XpkgCap_C24         pkgCap_C24   ref_gnd   str(mlcc_10uF_0402)
		XpkgCap_C25         pkgCap_C25   ref_gnd   str(mlcc_10uF_0402)
		XpkgCap_C26         pkgCap_C26   ref_gnd   str(mlcc_10uF_0402)

				* * *** exp to add 
				* XpkgCap_C21_2        pkgCap_C21   ref_gnd   str(mlcc_1uF_0204)
				* XpkgCap_C22_2        pkgCap_C22   ref_gnd   str(mlcc_1uF_0204)
				* XpkgCap_C23_2        pkgCap_C23   ref_gnd   str(mlcc_1uF_0204)
				* XpkgCap_C24_2        pkgCap_C24   ref_gnd   str(mlcc_1uF_0204)
				
				* XpkgCap_C17_3		pkgCap_C17	ref_gnd		str(mlcc_1uF_0201)
				* XpkgCap_C18_3		pkgCap_C18	ref_gnd		str(mlcc_1uF_0201)
				* XpkgCap_C19_3		pkgCap_C19	ref_gnd		str(mlcc_1uF_0201)
				* XpkgCap_C20_3		pkgCap_C20	ref_gnd		str(mlcc_1uF_0201)	  
				* XpkgCap_C21_3       pkgCap_C21  ref_gnd     str(mlcc_1uF_0201)
				* XpkgCap_C22_3       pkgCap_C22  ref_gnd     str(mlcc_1uF_0201)
				* XpkgCap_C23_3       pkgCap_C23  ref_gnd     str(mlcc_1uF_0201)
				* XpkgCap_C24_3       pkgCap_C24  ref_gnd     str(mlcc_1uF_0201)
				* XpkgCap_C25_3       pkgCap_C25  ref_gnd     str(mlcc_1uF_0201)
				* XpkgCap_C26_3       pkgCap_C26  ref_gnd     str(mlcc_1uF_0201)				
	.endif 

	.if ( 1 ) *** Andes 240404 opt 
		XpkgCap_C1	pkgCap_C1	ref_gnd		str(mlcc_1uF_0201)
		XpkgCap_C2	pkgCap_C2	ref_gnd		str(mlcc_1uF_0201)
		XpkgCap_C3	pkgCap_C3	ref_gnd		str(mlcc_1uF_0201)
		XpkgCap_C4	pkgCap_C4	ref_gnd		str(mlcc_1uF_0201)
		XpkgCap_C5	pkgCap_C5	ref_gnd		str(mlcc_1uF_0201)
		XpkgCap_C6	pkgCap_C6	ref_gnd		str(mlcc_1uF_0201)
		
		XpkgCap_C7  pkgCap_C7     ref_gnd    pkgCap_C7    ref_gnd str(mlcc_1uF_0402_3T_ft)
		XpkgCap_C8  pkgCap_C8     ref_gnd    pkgCap_C8    ref_gnd str(mlcc_1uF_0402_3T_ft)
		XpkgCap_C9  pkgCap_C9     ref_gnd    pkgCap_C9    ref_gnd str(mlcc_1uF_0402_3T_ft)
		XpkgCap_C10 pkgCap_C10    ref_gnd    pkgCap_C10   ref_gnd str(mlcc_1uF_0402_3T_ft)
		XpkgCap_C11 pkgCap_C11    ref_gnd    pkgCap_C11   ref_gnd str(mlcc_1uF_0402_3T_ft)
		XpkgCap_C12 pkgCap_C12    ref_gnd    pkgCap_C12   ref_gnd str(mlcc_1uF_0402_3T_ft)
		XpkgCap_C13 pkgCap_C13    ref_gnd    pkgCap_C13   ref_gnd str(mlcc_1uF_0402_3T_ft)
		XpkgCap_C14 pkgCap_C14    ref_gnd    pkgCap_C14   ref_gnd str(mlcc_1uF_0402_3T_ft)
		XpkgCap_C15 pkgCap_C15    ref_gnd    pkgCap_C15   ref_gnd str(mlcc_1uF_0402_3T_ft)
		XpkgCap_C16 pkgCap_C16    ref_gnd    pkgCap_C16   ref_gnd str(mlcc_1uF_0402_3T_ft)
		XpkgCap_C17 pkgCap_C17    ref_gnd    pkgCap_C17   ref_gnd str(mlcc_1uF_0402_3T_ft)
		
		XpkgCap_C18         pkgCap_C18   ref_gnd   str(mlcc_10uF_0402)
		XpkgCap_C19         pkgCap_C19   ref_gnd   str(mlcc_10uF_0402)
		XpkgCap_C20         pkgCap_C20   ref_gnd   str(mlcc_10uF_0402)
		XpkgCap_C21         pkgCap_C21   ref_gnd   str(mlcc_10uF_0402)
		XpkgCap_C22         pkgCap_C22   ref_gnd   str(mlcc_10uF_0402)
		XpkgCap_C23         pkgCap_C23   ref_gnd   str(mlcc_10uF_0402)
		XpkgCap_C24         pkgCap_C24   ref_gnd   str(mlcc_10uF_0402)
		XpkgCap_C25         pkgCap_C25   ref_gnd   str(mlcc_10uF_0402)
		XpkgCap_C26         pkgCap_C26   ref_gnd   str(mlcc_10uF_0402)
		
	.endif 
	
.endif 	*** Andes pkg 240327 ploc paritioned  end 

.if ( 0 )	*** Andes pkg 240327 ploc paritioned 
	Xblk_pkg
	+ pkg_bump_cpu_0_0 
	+ pkg_bump_cpu_1_0
	+ pkg_bump_cpu_2_0
	+ pkg_bump_cpu_0_1
	+ pkg_bump_cpu_1_1
	+ pkg_bump_cpu_2_1 
	+ pkg_bump_gpu_0_2
	+ pkg_bump_gpu_1_2
	+ pkg_bump_cpu_2_2
	+ pkg_bump_gpu_0_3
	+ pkg_bump_gpu_1_3
	+ bga_pkg
	+ pkgCap_C1
	+ pkgCap_C2
	+ pkgCap_C3
	+ pkgCap_C4
	+ pkgCap_C5
	+ pkgCap_C6
	+ pkgCap_C7
	+ pkgCap_C8
	+ pkgCap_C9
	+ pkgCap_C10
	+ pkgCap_C11
	+ pkgCap_C12
	+ pkgCap_C13
	+ pkgCap_C14
	+ pkgCap_C15
	+ pkgCap_C16
	+ pkgCap_C17
	+ pkgCap_C18
	+ pkgCap_C19
	+ pkgCap_C20
	+ pkgCap_C21
	+ pkgCap_C22
	+ pkgCap_C23
	+ pkgCap_C24
	+ pkgCap_C25
	+ pkgCap_C26
	+ ref_gnd
	+ Mam_MCM_L12_202403012ate_a_CPU_jgwei_IdEM
	
	.if ( 0 )	*** jgwei caps opt
		XpkgCap_C1   		 pkgCap_C1     ref_gnd    ref_gnd  str(mlcc_0p1uF_0204_TDK)
		XpkgCap_C2           pkgCap_C2     ref_gnd    ref_gnd  str(mlcc_0p1uF_0204_TDK)
		XpkgCap_C3           pkgCap_C3     ref_gnd    ref_gnd  str(mlcc_0p1uF_0204_TDK)
		XpkgCap_C4           pkgCap_C4     ref_gnd    ref_gnd  str(mlcc_0p1uF_0204_TDK)
													  
		XpkgCap_C5           pkgCap_C5     ref_gnd    ref_gnd  str(mlcc_0p047uF_0204_TDK)
		XpkgCap_C6           pkgCap_C6     ref_gnd    ref_gnd  str(mlcc_0p047uF_0204_TDK)
		XpkgCap_C7           pkgCap_C7     ref_gnd    ref_gnd  str(mlcc_0p047uF_0204_TDK)
		XpkgCap_C8           pkgCap_C8     ref_gnd    ref_gnd  str(mlcc_0p047uF_0204_TDK)
		XpkgCap_C13          pkgCap_C13     ref_gnd    ref_gnd  str(mlcc_0p047uF_0204_TDK)
		XpkgCap_C14          pkgCap_C14     ref_gnd    ref_gnd  str(mlcc_0p047uF_0204_TDK)
		XpkgCap_C15          pkgCap_C15     ref_gnd    ref_gnd  str(mlcc_0p047uF_0204_TDK)
		XpkgCap_C16          pkgCap_C16     ref_gnd    ref_gnd  str(mlcc_0p047uF_0204_TDK)	
		
		XpkgCap_C9          pkgCap_C9    ref_gnd    pkgCap_C9   ref_gnd str(mlcc_1uF_0402_3T_ft)
		XpkgCap_C10         pkgCap_C10   ref_gnd    pkgCap_C10   ref_gnd str(mlcc_1uF_0402_3T_ft)
		XpkgCap_C11         pkgCap_C11   ref_gnd    pkgCap_C11   ref_gnd str(mlcc_1uF_0402_3T_ft)
		XpkgCap_C12         pkgCap_C12   ref_gnd    pkgCap_C12   ref_gnd str(mlcc_1uF_0402_3T_ft)
		
		XpkgCap_C17  		pkgCap_C17	ref_gnd		str(mlcc_1uF_0204)
		XpkgCap_C18  		pkgCap_C18	ref_gnd		str(mlcc_1uF_0204)
		XpkgCap_C19  		pkgCap_C19	ref_gnd		str(mlcc_1uF_0204)
		XpkgCap_C20  		pkgCap_C20	ref_gnd		str(mlcc_1uF_0204)
		
		XpkgCap_C21         pkgCap_C21   ref_gnd   str(mlcc_10uF_0402)
		XpkgCap_C22         pkgCap_C22   ref_gnd   str(mlcc_10uF_0402)
		XpkgCap_C23         pkgCap_C23   ref_gnd   str(mlcc_10uF_0402)
		XpkgCap_C24         pkgCap_C24   ref_gnd   str(mlcc_10uF_0402)
		XpkgCap_C25         pkgCap_C25   ref_gnd   str(mlcc_10uF_0402)
		XpkgCap_C26         pkgCap_C26   ref_gnd   str(mlcc_10uF_0402)

				* * *** exp to add 
				* XpkgCap_C21_2        pkgCap_C21   ref_gnd   str(mlcc_1uF_0204)
				* XpkgCap_C22_2        pkgCap_C22   ref_gnd   str(mlcc_1uF_0204)
				* XpkgCap_C23_2        pkgCap_C23   ref_gnd   str(mlcc_1uF_0204)
				* XpkgCap_C24_2        pkgCap_C24   ref_gnd   str(mlcc_1uF_0204)
				
				* XpkgCap_C17_3		pkgCap_C17	ref_gnd		str(mlcc_1uF_0201)
				* XpkgCap_C18_3		pkgCap_C18	ref_gnd		str(mlcc_1uF_0201)
				* XpkgCap_C19_3		pkgCap_C19	ref_gnd		str(mlcc_1uF_0201)
				* XpkgCap_C20_3		pkgCap_C20	ref_gnd		str(mlcc_1uF_0201)	  
				* XpkgCap_C21_3       pkgCap_C21  ref_gnd     str(mlcc_1uF_0201)
				* XpkgCap_C22_3       pkgCap_C22  ref_gnd     str(mlcc_1uF_0201)
				* XpkgCap_C23_3       pkgCap_C23  ref_gnd     str(mlcc_1uF_0201)
				* XpkgCap_C24_3       pkgCap_C24  ref_gnd     str(mlcc_1uF_0201)
				* XpkgCap_C25_3       pkgCap_C25  ref_gnd     str(mlcc_1uF_0201)
				* XpkgCap_C26_3       pkgCap_C26  ref_gnd     str(mlcc_1uF_0201)				
	.endif 

	.if ( 1 ) *** Andes 240404 opt 
		XpkgCap_C1	pkgCap_C1	ref_gnd		str(mlcc_1uF_0201)
		XpkgCap_C2	pkgCap_C2	ref_gnd		str(mlcc_1uF_0201)
		XpkgCap_C3	pkgCap_C3	ref_gnd		str(mlcc_1uF_0201)
		XpkgCap_C4	pkgCap_C4	ref_gnd		str(mlcc_1uF_0201)
		XpkgCap_C5	pkgCap_C5	ref_gnd		str(mlcc_1uF_0201)
		XpkgCap_C6	pkgCap_C6	ref_gnd		str(mlcc_1uF_0201)
		
		XpkgCap_C7  pkgCap_C7     ref_gnd    pkgCap_C7    ref_gnd str(mlcc_1uF_0402_3T_ft)
		XpkgCap_C8  pkgCap_C8     ref_gnd    pkgCap_C8    ref_gnd str(mlcc_1uF_0402_3T_ft)
		XpkgCap_C9  pkgCap_C9     ref_gnd    pkgCap_C9    ref_gnd str(mlcc_1uF_0402_3T_ft)
		XpkgCap_C10 pkgCap_C10    ref_gnd    pkgCap_C10   ref_gnd str(mlcc_1uF_0402_3T_ft)
		XpkgCap_C11 pkgCap_C11    ref_gnd    pkgCap_C11   ref_gnd str(mlcc_1uF_0402_3T_ft)
		XpkgCap_C12 pkgCap_C12    ref_gnd    pkgCap_C12   ref_gnd str(mlcc_1uF_0402_3T_ft)
		XpkgCap_C13 pkgCap_C13    ref_gnd    pkgCap_C13   ref_gnd str(mlcc_1uF_0402_3T_ft)
		XpkgCap_C14 pkgCap_C14    ref_gnd    pkgCap_C14   ref_gnd str(mlcc_1uF_0402_3T_ft)
		XpkgCap_C15 pkgCap_C15    ref_gnd    pkgCap_C15   ref_gnd str(mlcc_1uF_0402_3T_ft)
		XpkgCap_C16 pkgCap_C16    ref_gnd    pkgCap_C16   ref_gnd str(mlcc_1uF_0402_3T_ft)
		XpkgCap_C17 pkgCap_C17    ref_gnd    pkgCap_C17   ref_gnd str(mlcc_1uF_0402_3T_ft)
		
		XpkgCap_C18         pkgCap_C18   ref_gnd   str(mlcc_10uF_0402)
		XpkgCap_C19         pkgCap_C19   ref_gnd   str(mlcc_10uF_0402)
		XpkgCap_C20         pkgCap_C20   ref_gnd   str(mlcc_10uF_0402)
		XpkgCap_C21         pkgCap_C21   ref_gnd   str(mlcc_10uF_0402)
		XpkgCap_C22         pkgCap_C22   ref_gnd   str(mlcc_10uF_0402)
		XpkgCap_C23         pkgCap_C23   ref_gnd   str(mlcc_10uF_0402)
		XpkgCap_C24         pkgCap_C24   ref_gnd   str(mlcc_10uF_0402)
		XpkgCap_C25         pkgCap_C25   ref_gnd   str(mlcc_10uF_0402)
		XpkgCap_C26         pkgCap_C26   ref_gnd   str(mlcc_10uF_0402)
		
	.endif 
	
.endif 	*** Andes pkg 240327 ploc paritioned  end 

.if ( 0 )	*** pkg mock up Andes 0724, 1004
	Xblk_pkg
	 + pkgCap_C142  ref_gnd
	 + pkgCap_C143  ref_gnd
	 + pkgCap_C144  ref_gnd
	 + pkgCap_C145  ref_gnd
	 + pkgCap_C146  ref_gnd
	 + pkgCap_C147  ref_gnd
	 + pkgCap_C148  ref_gnd
	 + pkgCap_C149  ref_gnd
	 + pkgCap_C150  ref_gnd
	 + pkgCap_C151  ref_gnd
	 + pkgCap_C200  ref_gnd
	 + pkgCap_C201  ref_gnd
	 + pkgCap_C202  ref_gnd
	 + pkgCap_C203  ref_gnd
	 + pkgCap_C204  ref_gnd
	 + pkgCap_C205  ref_gnd
	 + pkgCap_C206  ref_gnd
	 + pkgCap_C207  ref_gnd
	 + pkgCap_C79   ref_gnd
	 + pkgCap_C82   ref_gnd
	 + pkgCap_C83   ref_gnd
	 + pkgCap_C84   ref_gnd
	 + pkg_bump_gpu ref_gnd 	*** GPU 
	 + pkg_bump ref_gnd
	 + pkg_bump ref_gnd
	 + pkg_bump ref_gnd
	 + pkg_bump ref_gnd
	 + pkg_bump ref_gnd		*** DSU 
	 + pkg_bump ref_gnd
	 + pkg_bump ref_gnd
	 + pkg_bump ref_gnd
	 + pkg_bump ref_gnd	 
	 + bga_pkg		ref_gnd
	 + bga_pkg		ref_gnd
	 + str(pkg_model)

	*** Pkg cap ***
					*** commented out due to size 1108
					* XpkgCap_C147  pkgCap_C147	ref_gnd		str(mlcc_0p1uF_0204)
					* XpkgCap_C148  pkgCap_C148	ref_gnd		str(mlcc_0p1uF_0204)
					* XpkgCap_C149  pkgCap_C149	ref_gnd		str(mlcc_1uF_0204)
					* XpkgCap_C150  pkgCap_C150	ref_gnd		str(mlcc_1uF_0204)
					* XpkgCap_C151  pkgCap_C151	ref_gnd		str(mlcc_1uF_0204)
					* XpkgCap_C142  pkgCap_C142	ref_gnd		str(mlcc_0p1uF_0204)
					* XpkgCap_C143  pkgCap_C143	ref_gnd		str(mlcc_0p1uF_0204)
					* XpkgCap_C144  pkgCap_C144	ref_gnd		str(mlcc_0p1uF_0204)
					* XpkgCap_C145  pkgCap_C145	ref_gnd		str(mlcc_0p1uF_0204)
					* XpkgCap_C146  pkgCap_C146	ref_gnd		str(mlcc_0p1uF_0204)

	XpkgCap_C147  pkgCap_C147	ref_gnd		str(mlcc_0p1uF_0201)
	XpkgCap_C148  pkgCap_C148	ref_gnd		str(mlcc_0p1uF_0201)
	XpkgCap_C149  pkgCap_C149	ref_gnd		str(mlcc_0p01uF_0201)
	XpkgCap_C150  pkgCap_C150	ref_gnd		str(mlcc_0p01uF_0201)
	XpkgCap_C151  pkgCap_C151	ref_gnd		str(mlcc_0p01uF_0201)
	XpkgCap_C142  pkgCap_C142	ref_gnd		str(mlcc_1uF_0201)
	XpkgCap_C143  pkgCap_C143	ref_gnd		str(mlcc_1uF_0201)
	XpkgCap_C144  pkgCap_C144	ref_gnd		str(mlcc_1uF_0201)
	XpkgCap_C145  pkgCap_C145	ref_gnd		str(mlcc_1uF_0201)
	XpkgCap_C146  pkgCap_C146	ref_gnd		str(mlcc_1uF_0201)
	
	XpkgCap_C200  pkgCap_C200	ref_gnd		str(mlcc_10uF_0402)
	XpkgCap_C201  pkgCap_C201	ref_gnd		str(mlcc_10uF_0402)
	XpkgCap_C202  pkgCap_C202	ref_gnd		str(mlcc_10uF_0402)	
	XpkgCap_C203  pkgCap_C203	ref_gnd		str(mlcc_10uF_0402)
	XpkgCap_C204  pkgCap_C204	ref_gnd		str(mlcc_10uF_0402)
	XpkgCap_C205  pkgCap_C205	ref_gnd		str(mlcc_10uF_0402)
	XpkgCap_C206  pkgCap_C206	ref_gnd		str(mlcc_10uF_0402)
	XpkgCap_C207  pkgCap_C207	ref_gnd		str(mlcc_10uF_0402)
	XpkgCap_C79   pkgCap_C79	ref_gnd		str(mlcc_10uF_0402)
	XpkgCap_C82   pkgCap_C82	ref_gnd		str(mlcc_10uF_0402)
	XpkgCap_C83   pkgCap_C83	ref_gnd		str(mlcc_10uF_0402)
	XpkgCap_C84   pkgCap_C84	ref_gnd		str(mlcc_10uF_0402)

	
.endif  	*** end of pkg mock up Andes 0724 	


.if ( 0 )	*** pkg mock up Andes 240117
	Xblk_pkg
	+ bga_pkg 
	+ pkgCap_C1 
	+ pkgCap_C2
	+ pkgCap_C3
	+ pkgCap_C4
	+ pkgCap_C5
	+ pkgCap_C6
	+ pkgCap_C7
	+ pkgCap_C8
	+ pkgCap_C9
	+ pkgCap_C10
	+ pkgCap_C3_1
	+ pkgCap_C3_2
	+ pkgCap_C3_3
	+ pkgCap_C3_4
	+ pkgCap_C3_5
	+ pkgCap_C3_6
	+ pkgCap_C3_7
	+ pkgCap_C3_8
	+ pkgCap_C4_1
	+ pkgCap_C4_2
	+ pkgCap_C4_3
	+ pkgCap_C4_4
	+ pkg_bump_gpu
	+ pkg_bump
	+ ref_gnd
	+ Mam_MCM_L12_231215c_mod48_CPU_GPU_02_IdEM_s25p
	
	XpkgCap_C1   		 pkgCap_C1     ref_gnd    ref_gnd  str(mlcc_0p1uF_0204_TDK)
	XpkgCap_C2           pkgCap_C2     ref_gnd    ref_gnd  str(mlcc_0p1uF_0204_TDK)
	XpkgCap_C3           pkgCap_C3     ref_gnd    ref_gnd  str(mlcc_0p1uF_0204_TDK)
	XpkgCap_C4           pkgCap_C4     ref_gnd    ref_gnd  str(mlcc_0p1uF_0204_TDK)
												  
	XpkgCap_C5           pkgCap_C5     ref_gnd    ref_gnd  str(mlcc_0p047uF_0204_TDK)
	XpkgCap_C6           pkgCap_C6     ref_gnd    ref_gnd  str(mlcc_0p047uF_0204_TDK)
	XpkgCap_C7           pkgCap_C7     ref_gnd    ref_gnd  str(mlcc_0p047uF_0204_TDK)
	XpkgCap_C8           pkgCap_C8     ref_gnd    ref_gnd  str(mlcc_0p047uF_0204_TDK)

	XpkgCap_C3_1         pkgCap_C3_1   ref_gnd    pkgCap_C3_1   ref_gnd str(mlcc_1uF_0402_3T_ft)
	XpkgCap_C3_2         pkgCap_C3_2   ref_gnd    pkgCap_C3_2   ref_gnd str(mlcc_1uF_0402_3T_ft)
	XpkgCap_C3_3         pkgCap_C3_3   ref_gnd    pkgCap_C3_3   ref_gnd str(mlcc_1uF_0402_3T_ft)
	XpkgCap_C3_4         pkgCap_C3_4   ref_gnd    pkgCap_C3_4   ref_gnd str(mlcc_1uF_0402_3T_ft)
	
	XpkgCap_C3_5         pkgCap_C3_5   ref_gnd   str(mlcc_1uF_0204)
	XpkgCap_C3_6         pkgCap_C3_6   ref_gnd   str(mlcc_1uF_0204)
	XpkgCap_C3_7         pkgCap_C3_7   ref_gnd   str(mlcc_1uF_0204)
	XpkgCap_C3_8         pkgCap_C3_8   ref_gnd   str(mlcc_1uF_0204)
	
	XpkgCap_C4_1         pkgCap_C4_1   ref_gnd   str(mlcc_10uF_0402)
	XpkgCap_C4_2         pkgCap_C4_2   ref_gnd   str(mlcc_10uF_0402)
	XpkgCap_C4_3         pkgCap_C4_3   ref_gnd   str(mlcc_10uF_0402)
	XpkgCap_C4_4         pkgCap_C4_4   ref_gnd   str(mlcc_10uF_0402)
	*** add more 10uF caps 
	XpkgCap_C4_1_2         pkgCap_C4_1   ref_gnd   str(mlcc_10uF_0402)
	XpkgCap_C4_2_2         pkgCap_C4_2   ref_gnd   str(mlcc_10uF_0402)
	XpkgCap_C4_3_2         pkgCap_C4_3   ref_gnd   str(mlcc_10uF_0402)
	XpkgCap_C4_4_2         pkgCap_C4_4   ref_gnd   str(mlcc_10uF_0402)
	
	.if ( 0 )  *** test to connect Ecap to bump 
		XeCap_1
		+ pkg_bump_one	pkg_bump_one	pkg_bump_one	pkg_bump_one	pkg_bump_one	pkg_bump_one
		+ pkg_bump_one	pkg_bump_one	pkg_bump_one	pkg_bump_one	pkg_bump_one	pkg_bump_one
		+ pkg_bump_one	pkg_bump_one	pkg_bump_one	pkg_bump_one	pkg_bump_one	pkg_bump_one
		+ ref_gnd 	ref_gnd		ref_gnd		ref_gnd 	ref_gnd		ref_gnd 
		+ ref_gnd 	ref_gnd		ref_gnd		ref_gnd 	ref_gnd		ref_gnd 
		+ ref_gnd 	ref_gnd		ref_gnd		ref_gnd 	ref_gnd		ref_gnd 
		+ str(siCap_empwr_EC2047_4p8uF)
		
		XeCap_2
		+ pkg_bump_one	pkg_bump_one	pkg_bump_one	pkg_bump_one	pkg_bump_one	pkg_bump_one
		+ pkg_bump_one	pkg_bump_one	pkg_bump_one	pkg_bump_one	pkg_bump_one	pkg_bump_one
		+ pkg_bump_one	pkg_bump_one	pkg_bump_one	pkg_bump_one	pkg_bump_one	pkg_bump_one
		+ ref_gnd 	ref_gnd		ref_gnd		ref_gnd 	ref_gnd		ref_gnd 
		+ ref_gnd 	ref_gnd		ref_gnd		ref_gnd 	ref_gnd		ref_gnd 
		+ ref_gnd 	ref_gnd		ref_gnd		ref_gnd 	ref_gnd		ref_gnd 
		+ str(siCap_empwr_EC2047_4p8uF)
		
		XeCap_3
		+ pkg_bump_one	pkg_bump_one	pkg_bump_one	pkg_bump_one	pkg_bump_one	pkg_bump_one
		+ pkg_bump_one	pkg_bump_one	pkg_bump_one	pkg_bump_one	pkg_bump_one	pkg_bump_one
		+ pkg_bump_one	pkg_bump_one	pkg_bump_one	pkg_bump_one	pkg_bump_one	pkg_bump_one
		+ ref_gnd 	ref_gnd		ref_gnd		ref_gnd 	ref_gnd		ref_gnd 
		+ ref_gnd 	ref_gnd		ref_gnd		ref_gnd 	ref_gnd		ref_gnd 
		+ ref_gnd 	ref_gnd		ref_gnd		ref_gnd 	ref_gnd		ref_gnd 
		+ str(siCap_empwr_EC2047_4p8uF)
		
	.endif 
	

.endif 		*** pkg mock up Andes 240117 end 


.if ( 0 )	*** Zijie mock up 240207 w/  3x embedded ecap EC2047
	Xblk_pkg
	+ pkg_bump
	+ pkg_bump_gpu
	+ bga_pkg
	+ pkgCap_C4_1
	+ pkgCap_C4_2
	+ pkgCap_C4_3
	+ pkgCap_C4_4
	+ pkgCap_C1 
	+ pkgCap_C2
	+ pkgCap_C3
	+ pkgCap_C4
	+ pkgCap_C5
	+ pkgCap_C6
	+ pkgCap_C7
	+ pkgCap_C8
	+ pkgCap_C9
	+ pkgCap_C10
	+ pkgCap_C3_1
	+ pkgCap_C3_2
	+ pkgCap_C3_3
	+ pkgCap_C3_4
	+ pkgCap_C3_5
	+ pkgCap_C3_6
	+ pkgCap_C3_7
	+ pkgCap_C3_8
	+ pkgCap_eCap_EC1_A1
	+ pkgCap_eCap_EC1_A2
	+ pkgCap_eCap_EC1_A3
	+ pkgCap_eCap_EC1_A4
	+ pkgCap_eCap_EC1_A5
	+ pkgCap_eCap_EC1_A6
	+ pkgCap_eCap_EC1_C1
	+ pkgCap_eCap_EC1_C2
	+ pkgCap_eCap_EC1_C3
	+ pkgCap_eCap_EC1_C4
	+ pkgCap_eCap_EC1_C5
	+ pkgCap_eCap_EC1_C6
	+ pkgCap_eCap_EC1_E1
	+ pkgCap_eCap_EC1_E2
	+ pkgCap_eCap_EC1_E3
	+ pkgCap_eCap_EC1_E4
	+ pkgCap_eCap_EC1_E5
	+ pkgCap_eCap_EC1_E6
	+ pkgCap_eCap_EC2_A1
	+ pkgCap_eCap_EC2_A2
	+ pkgCap_eCap_EC2_A3
	+ pkgCap_eCap_EC2_A4
	+ pkgCap_eCap_EC2_A5
	+ pkgCap_eCap_EC2_A6
	+ pkgCap_eCap_EC2_C1
	+ pkgCap_eCap_EC2_C2
	+ pkgCap_eCap_EC2_C3
	+ pkgCap_eCap_EC2_C4
	+ pkgCap_eCap_EC2_C5
	+ pkgCap_eCap_EC2_C6
	+ pkgCap_eCap_EC2_E1
	+ pkgCap_eCap_EC2_E2
	+ pkgCap_eCap_EC2_E3
	+ pkgCap_eCap_EC2_E4
	+ pkgCap_eCap_EC2_E5
	+ pkgCap_eCap_EC2_E6
	+ pkgCap_eCap_EC3_A1
	+ pkgCap_eCap_EC3_A2
	+ pkgCap_eCap_EC3_A3
	+ pkgCap_eCap_EC3_A4
	+ pkgCap_eCap_EC3_A5
	+ pkgCap_eCap_EC3_A6
	+ pkgCap_eCap_EC3_C1
	+ pkgCap_eCap_EC3_C2
	+ pkgCap_eCap_EC3_C3
	+ pkgCap_eCap_EC3_C4
	+ pkgCap_eCap_EC3_C5
	+ pkgCap_eCap_EC3_C6
	+ pkgCap_eCap_EC3_E1
	+ pkgCap_eCap_EC3_E2
	+ pkgCap_eCap_EC3_E3
	+ pkgCap_eCap_EC3_E4
	+ pkgCap_eCap_EC3_E5
	+ pkgCap_eCap_EC3_E6	
	+ ref_gnd
	+ cpu_0206_2_IdEM
	
	*** pkg MLCC DSC 
	XpkgCap_C1   		 pkgCap_C1     ref_gnd    ref_gnd  str(mlcc_0p1uF_0204_TDK)
	XpkgCap_C2           pkgCap_C2     ref_gnd    ref_gnd  str(mlcc_0p1uF_0204_TDK)
	XpkgCap_C3           pkgCap_C3     ref_gnd    ref_gnd  str(mlcc_0p1uF_0204_TDK)
	XpkgCap_C4           pkgCap_C4     ref_gnd    ref_gnd  str(mlcc_0p1uF_0204_TDK)
												 
	XpkgCap_C5           pkgCap_C5     ref_gnd    ref_gnd  str(mlcc_0p047uF_0204_TDK)
	XpkgCap_C6           pkgCap_C6     ref_gnd    ref_gnd  str(mlcc_0p047uF_0204_TDK)
	XpkgCap_C7           pkgCap_C7     ref_gnd    ref_gnd  str(mlcc_0p047uF_0204_TDK)
	XpkgCap_C8           pkgCap_C8     ref_gnd    ref_gnd  str(mlcc_0p047uF_0204_TDK)

	XpkgCap_C3_1         pkgCap_C3_1   ref_gnd    pkgCap_C3_1   ref_gnd str(mlcc_1uF_0402_3T_ft)
	XpkgCap_C3_2         pkgCap_C3_2   ref_gnd    pkgCap_C3_2   ref_gnd str(mlcc_1uF_0402_3T_ft)
	XpkgCap_C3_3         pkgCap_C3_3   ref_gnd    pkgCap_C3_3   ref_gnd str(mlcc_1uF_0402_3T_ft)
	XpkgCap_C3_4         pkgCap_C3_4   ref_gnd    pkgCap_C3_4   ref_gnd str(mlcc_1uF_0402_3T_ft)
	
	XpkgCap_C3_5         pkgCap_C3_5   ref_gnd   str(mlcc_1uF_0204)
	XpkgCap_C3_6         pkgCap_C3_6   ref_gnd   str(mlcc_1uF_0204)
	XpkgCap_C3_7         pkgCap_C3_7   ref_gnd   str(mlcc_1uF_0204)
	XpkgCap_C3_8         pkgCap_C3_8   ref_gnd   str(mlcc_1uF_0204)
	
	XpkgCap_C4_1         pkgCap_C4_1   ref_gnd   str(mlcc_10uF_0402)
	XpkgCap_C4_2         pkgCap_C4_2   ref_gnd   str(mlcc_10uF_0402)
	XpkgCap_C4_3         pkgCap_C4_3   ref_gnd   str(mlcc_10uF_0402)
	XpkgCap_C4_4         pkgCap_C4_4   ref_gnd   str(mlcc_10uF_0402)
	*** add more 10uF caps 
	XpkgCap_C4_1_2         pkgCap_C4_1   ref_gnd   str(mlcc_10uF_0402)
	XpkgCap_C4_2_2         pkgCap_C4_2   ref_gnd   str(mlcc_10uF_0402)
	XpkgCap_C4_3_2         pkgCap_C4_3   ref_gnd   str(mlcc_10uF_0402)
	XpkgCap_C4_4_2         pkgCap_C4_4   ref_gnd   str(mlcc_10uF_0402)
	
	*** embedded Ecap 
	.if (is_use_ecap_ebed == 1) 
		X_pkgEcap_1
		+ pkgCap_eCap_EC1_A1
		+ pkgCap_eCap_EC1_A2
		+ pkgCap_eCap_EC1_A3
		+ pkgCap_eCap_EC1_A4
		+ pkgCap_eCap_EC1_A5
		+ pkgCap_eCap_EC1_A6
		+ pkgCap_eCap_EC1_C1
		+ pkgCap_eCap_EC1_C2
		+ pkgCap_eCap_EC1_C3
		+ pkgCap_eCap_EC1_C4
		+ pkgCap_eCap_EC1_C5
		+ pkgCap_eCap_EC1_C6
		+ pkgCap_eCap_EC1_E1
		+ pkgCap_eCap_EC1_E2
		+ pkgCap_eCap_EC1_E3
		+ pkgCap_eCap_EC1_E4
		+ pkgCap_eCap_EC1_E5
		+ pkgCap_eCap_EC1_E6
		+ ref_gnd 	ref_gnd		ref_gnd		ref_gnd 	ref_gnd		ref_gnd 
		+ ref_gnd 	ref_gnd		ref_gnd		ref_gnd 	ref_gnd		ref_gnd 
		+ ref_gnd 	ref_gnd		ref_gnd		ref_gnd 	ref_gnd		ref_gnd 
		+ str(siCap_empwr_EC2047_4p8uF)

		X_pkgEcap_2
		+ pkgCap_eCap_EC2_A1
		+ pkgCap_eCap_EC2_A2
		+ pkgCap_eCap_EC2_A3
		+ pkgCap_eCap_EC2_A4
		+ pkgCap_eCap_EC2_A5
		+ pkgCap_eCap_EC2_A6
		+ pkgCap_eCap_EC2_C1
		+ pkgCap_eCap_EC2_C2
		+ pkgCap_eCap_EC2_C3
		+ pkgCap_eCap_EC2_C4
		+ pkgCap_eCap_EC2_C5
		+ pkgCap_eCap_EC2_C6
		+ pkgCap_eCap_EC2_E1
		+ pkgCap_eCap_EC2_E2
		+ pkgCap_eCap_EC2_E3
		+ pkgCap_eCap_EC2_E4
		+ pkgCap_eCap_EC2_E5
		+ pkgCap_eCap_EC2_E6
		+ ref_gnd 	ref_gnd		ref_gnd		ref_gnd 	ref_gnd		ref_gnd 
		+ ref_gnd 	ref_gnd		ref_gnd		ref_gnd 	ref_gnd		ref_gnd 
		+ ref_gnd 	ref_gnd		ref_gnd		ref_gnd 	ref_gnd		ref_gnd 
		+ str(siCap_empwr_EC2047_4p8uF)
		
		X_pkgEcap_3
		+ pkgCap_eCap_EC3_A1
		+ pkgCap_eCap_EC3_A2
		+ pkgCap_eCap_EC3_A3
		+ pkgCap_eCap_EC3_A4
		+ pkgCap_eCap_EC3_A5
		+ pkgCap_eCap_EC3_A6
		+ pkgCap_eCap_EC3_C1
		+ pkgCap_eCap_EC3_C2
		+ pkgCap_eCap_EC3_C3
		+ pkgCap_eCap_EC3_C4
		+ pkgCap_eCap_EC3_C5
		+ pkgCap_eCap_EC3_C6
		+ pkgCap_eCap_EC3_E1
		+ pkgCap_eCap_EC3_E2
		+ pkgCap_eCap_EC3_E3
		+ pkgCap_eCap_EC3_E4
		+ pkgCap_eCap_EC3_E5
		+ pkgCap_eCap_EC3_E6
		+ ref_gnd 	ref_gnd		ref_gnd		ref_gnd 	ref_gnd		ref_gnd 
		+ ref_gnd 	ref_gnd		ref_gnd		ref_gnd 	ref_gnd		ref_gnd 
		+ ref_gnd 	ref_gnd		ref_gnd		ref_gnd 	ref_gnd		ref_gnd 
		+ str(siCap_empwr_EC2047_4p8uF)
	
	.endif 
	
.endif 		*** Zijie mock up 240207 w/  3x embedded ecap EC2047 end 
	
*************************************** Die ***********************************
*** approach 1: multi grp modeling 
.if (die_model_sig != 1 )
	xblk_die
	+ 			pkg_bump_cpu_0_0
	+ ref_gnd	pkg_bump_cpu_1_0
	+ ref_gnd 	pkg_bump_cpu_2_0
	+ ref_gnd	pkg_bump_cpu_0_1
	+ ref_gnd	pkg_bump_cpu_1_1 
	+ ref_gnd	pkg_bump_cpu_2_1
	+ ref_gnd	pkg_bump_gpu_0_2
	+ ref_gnd	pkg_bump_gpu_1_2
	+ ref_gnd	pkg_bump_cpu_2_2
	+ ref_gnd	pkg_bump_gpu_0_3
	+ ref_gnd	pkg_bump_gpu_1_3
	+ ref_gnd 
	+ adsPowerModel_cpu
	
	IcurrSrc_cpu_2_1	pkg_bump_cpu_2_1	ref_gnd	PWL  pwlfile = str(pwl_file_cpu2Core_DSU)		td = 0.n
	r_short_2_1_and_2_2 pkg_bump_cpu_2_2	pkg_bump_cpu_2_1	1.n 
	IcurrSrc_cpu_2_0	pkg_bump_cpu_2_0	ref_gnd	PWL  pwlfile = str(pwl_file_cpu2Core_x1p2)		td = 12.n
	
	IcurrSrc_cpu_1_1	pkg_bump_cpu_1_1	ref_gnd	PWL  pwlfile = str(pwl_file_cpu2Core_x1p2)		td = 24.n
	IcurrSrc_cpu_1_0	pkg_bump_cpu_1_0	ref_gnd	PWL  pwlfile = str(pwl_file_cpu2Core_x1p2)		td = 36.n
	
	IcurrSrc_cpu_0_1	pkg_bump_cpu_0_1	ref_gnd	PWL  pwlfile = str(pwl_file_cpu2Core_x1p2)		td = 48.n
	IcurrSrc_cpu_0_0	pkg_bump_cpu_0_0	ref_gnd	PWL  pwlfile = str(pwl_file_cpu2Core_x1p2)		td = 60.n
	
	IcurrSrc_gpu_1_3	pkg_bump_gpu_1_3	ref_gnd	PWL  pwlfile = str(pwl_file_gpu_1Of4)		td = 100.n 
	IcurrSrc_gpu_1_2	pkg_bump_gpu_1_2	ref_gnd	PWL  pwlfile = str(pwl_file_gpu_1Of4)		td = 100.n 
	IcurrSrc_gpu_0_3	pkg_bump_gpu_0_3	ref_gnd	PWL  pwlfile = str(pwl_file_gpu_1Of4)		td = 100.n 
	IcurrSrc_gpu_0_2	pkg_bump_gpu_0_2	ref_gnd	PWL  pwlfile = str(pwl_file_gpu_1Of4)		td = 100.n 
	
	*** MIM cap *** 
	.if (is_MIM == 1)
		Cdie_MIM_cpu_2_1	    pkg_bump_cpu_2_1    ref_gnd   160.n
		Cdie_MIM_cpu_2_0	    pkg_bump_cpu_2_0    ref_gnd   160.n
		Cdie_MIM_cpu_1_1	    pkg_bump_cpu_1_1    ref_gnd   160.n
		Cdie_MIM_cpu_1_0	    pkg_bump_cpu_1_0    ref_gnd   160.n
		Cdie_MIM_cpu_0_1	    pkg_bump_cpu_0_1    ref_gnd   160.n
		Cdie_MIM_cpu_0_0	    pkg_bump_cpu_0_0    ref_gnd   160.n
		Cdie_MIM_gpu_1_3	    pkg_bump_gpu_1_3    ref_gnd   160.n
		Cdie_MIM_gpu_1_2	    pkg_bump_gpu_1_2    ref_gnd   160.n
		Cdie_MIM_gpu_0_3	    pkg_bump_gpu_0_3    ref_gnd   160.n
		Cdie_MIM_gpu_0_2	    pkg_bump_gpu_0_2    ref_gnd   160.n
		
			* Rdie_MIM_cpu_2_1	pkg_bump_cpu_2_1_int   ref_gnd  0.17m
			* Rdie_MIM_cpu_2_0	pkg_bump_cpu_2_0_int   ref_gnd  0.17m
			* Rdie_MIM_cpu_1_1	pkg_bump_cpu_1_1_int   ref_gnd  0.17m
			* Rdie_MIM_cpu_1_0	pkg_bump_cpu_1_0_int   ref_gnd  0.17m
			* Rdie_MIM_cpu_0_1	pkg_bump_cpu_0_1_int   ref_gnd  0.17m
			* Rdie_MIM_cpu_0_0	pkg_bump_cpu_0_0_int   ref_gnd  0.17m
			* Rdie_MIM_gpu_1_3	pkg_bump_gpu_1_3_int   ref_gnd  0.17m
			* Rdie_MIM_gpu_1_2	pkg_bump_gpu_1_2_int   ref_gnd  0.17m
			* Rdie_MIM_gpu_0_3	pkg_bump_gpu_0_3_int   ref_gnd  0.17m
			* Rdie_MIM_gpu_0_2	pkg_bump_gpu_0_2_int   ref_gnd  0.17m
	
    .endif 	
	
	
							* *** uncomment, if all CPU grps lumped 
							* r_cpu_short0 	pkg_bump 	pkg_bump_cpu_0_0	1.n 
							* r_cpu_short1 	pkg_bump 	pkg_bump_cpu_1_0	1.n 
							* r_cpu_short2 	pkg_bump 	pkg_bump_cpu_2_0	1.n 
							* r_cpu_short3 	pkg_bump 	pkg_bump_cpu_0_1	1.n 
							* r_cpu_short4 	pkg_bump 	pkg_bump_cpu_1_1	1.n 
							* r_cpu_short5 	pkg_bump 	pkg_bump_cpu_2_1	1.n 
							
							* *** uncomment, if all GPU grps lumped 
							* r_gpu_short0 	pkg_bump_gpu 	pkg_bump_gpu_0_2	1.n 
							* r_gpu_short1 	pkg_bump_gpu 	pkg_bump_gpu_1_2	1.n 
							* r_gpu_short2 	pkg_bump_gpu 	pkg_bump_gpu_2_2	1.n 
							* r_gpu_short3 	pkg_bump_gpu 	pkg_bump_gpu_0_3	1.n 	
							* r_gpu_short4 	pkg_bump_gpu 	pkg_bump_gpu_1_3	1.n 
							
							* *** uncomment, if CPU & GPU grps lumped 
							* r_cpu_gpu_short pkg_bump	pkg_bump_gpu	1.n
							
							* IcurrSrc_single	pkg_bump	ref_gnd	PWL  pwlfile = str(pwl_file_cpugpuAll) 


			* Xblk_die 		pkg_bump		ref_gnd model_die_typ C_die= 'Cdie_cpu'	R_die_1= 'Rdie_cpu' R_die_2= 1.e-6	R_leak= 'Rleak_cpu'	pwl_file_in = str(pwl_file_cpu)
			* Xblk_die_gpu 	pkg_bump_gpu	ref_gnd model_die_typ C_die= 'Cdie_gpu'	R_die_1= 'Rdie_gpu' R_die_2= 1.e-6	R_leak= 'Rleak_gpu'	pwl_file_in = str(pwl_file_gpu)
.endif 
*** approach 2: single grp modeling	
.if (die_model_sig == 1 )
	*** all bump grps connected to single die model 
	R_bump_merge_0 pkg_bump_one	pkg_bump		1.n 
	R_bump_merge_1 pkg_bump_one	pkg_bump_gpu	1.n 
	
	*** Cdie/Rdie 535nF/0.031mOhm from 240214 Andes 
	*** Cdie/Rdie 944nF, 0.039mOhm from 240314 Andes 
	.if (is_MIM == 0)
				* Xblk_die 		pkg_bump_one	ref_gnd model_die_typ C_die=  535.n	R_die_1= 0.031m  R_die_2= 1.n	R_leak= 'Rleak_cpu'	pwl_file_in = str(pwl_file_cpugpuAll)
		Xblk_die 		pkg_bump_one	ref_gnd model_die_typ C_die=  944.n	R_die_1= 0.039m  R_die_2= 1.n	R_leak= 'Rleak_cpu'	pwl_file_in = str(pwl_file_cpugpuAll)
	.endif 
	.if (is_MIM == 1) 
				* Xblk_die 		pkg_bump_one	ref_gnd model_die_typ C_die= 2052.n	R_die_1= 0.043m  R_die_2= 1.n	R_leak= 'Rleak_cpu'	pwl_file_in = str(pwl_file_cpugpuAll)	*** MIM, + 50 * 43.33 * 0.7 
		Xblk_die 		pkg_bump_one	ref_gnd model_die_typ C_die= 2461.n	R_die_1= 0.039m  R_die_2= 1.n	R_leak= 'Rleak_cpu'	pwl_file_in = str(pwl_file_cpugpuAll)	*** MIM, + 50 * 43.33 * 0.7 
	.endif 
.endif 

X_probe_filter
+ pkg_bump_cpu_0_0
+ ref_gnd
+ pkg_bump_cpu_0_0_hf 
+ pkg_bump_cpu_0_0_lf
+ meas_filter

	

*************************************** Analysis I: AC simulation *************
.if ( is_ac_run == 1 )
	.if ( 1 )
		*** NOTE: DO not include port def if tran analysis later
		P1 pkg_bump	ref_gnd	port=1	z0 = 0.1
		P2 pkg_bump_gpu	ref_gnd	port=2	z0 = 0.1

		
		.lin 	sparcalc=1 	filename=impedance_plot	noisecalc=0 	gdcalc=0	format=touchstone 	dataformat=MA 
		*.probe  ac s11(db) s11(p) s21(db) s21(p) 
		.probe ac zin(1)(m) zin(1)(p) zin(2)(m) zin(2)(p)
	.endif 

	.ac 	dec 50 1. 1.G
	*I_pkg_bump_1_0 		pkg_bump_1_0	ref_gnd		AC=1
	*.probe AC v(pkg_bump_1_0)

.endif

*************************************** Analysis II: Transient simulation *****
.if ( is_ac_run != 1 )
	.probe tran v(pkg_bump) 	v(pkg_bump_gpu) 	v(bga_pkg)  v(bga_pcb)  v(bga_pcb_south_col0) v(bga_pcb_north_col0) v(bga_pcb_south_col1) v(bga_pcb_north_col1)  
	* .probe tran v(bga_pcb_south) v(bga_pcb_north)
	
	.probe tran v(pkg_bump_cpu_2_1)
	.probe tran v(pkg_bump_cpu_2_2)
	.probe tran v(pkg_bump_cpu_2_0)

	.probe tran v(pkg_bump_cpu_1_1)
	.probe tran v(pkg_bump_cpu_1_0)

	.probe tran v(pkg_bump_cpu_0_1)
	.probe tran v(pkg_bump_cpu_0_0)

	.probe tran v(pkg_bump_gpu_1_3)
	.probe tran v(pkg_bump_gpu_1_2)
	.probe tran v(pkg_bump_gpu_0_3)
	.probe tran v(pkg_bump_gpu_0_2)
	
	.probe tran v(pkg_bump_cpu_0_0_hf) v(pkg_bump_cpu_0_0_lf) 
	
	
	.probe x(Xblk_die.pin_bump)		
    .probe x(Xblk_pkg.a_3) 	x(Xblk_pkg.a_1) x(Xblk_pkg.a_2)  x(Xblk_pkg.a_12) 	
	.probe x(Xblk_PCB.a_3)  
	.probe x(xblk_PCB.a_1)  	x(xblk_PCB.a_2) 
	.probe x(xblk_PMIC.pin_out)

	* .param vdd_meas_start = 0.n
	* .param vdd_meas_end   = 5.u
	* .meas tran pkg_bump_cpu_p2p 		PP	V(pkg_bump)	from='vdd_meas_start' to='vdd_meas_end'
	* .meas tran pkg_bump_cpu_vmax	MAX	V(pkg_bump)	from='vdd_meas_start' to='vdd_meas_end'
	* .meas tran pkg_bump_cpu_vmin	MIN	V(pkg_bump)	from='vdd_meas_start' to='vdd_meas_end'
	* .meas tran pkg_bump_cpu_vmax_t	WHEN	V(pkg_bump) = 'pkg_bump_cpu_vmax' 	from='vdd_meas_start' to='vdd_meas_end'
	* .meas tran pkg_bump_cpu_vmin_t	WHEN	V(pkg_bump) = 'pkg_bump_cpu_vmin' 	from='vdd_meas_start' to='vdd_meas_end'
	* .meas tran pkg_bump_p2p 		PP	V(pkg_bump)	from='vdd_meas_start' to='vdd_meas_end'
	
	*.probe i(L_comp)	i(L_comp_gpu)
	*.probe i(*)
	*.probe x(*)

.endif 