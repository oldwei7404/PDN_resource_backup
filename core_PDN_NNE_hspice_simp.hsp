* Top level spice file 

.option post=1
*.chkanode type=gate dv=0.5*pvdd report=active
.option parhier = local 
.option measform = 1
.option lis_new
.option post probe
.param pi = 3.141592653

*************************************** User defined functions ****************
.param V_meas(node, ref) = 'v(node) - v(ref)'


*************************************** Input Models**************************
	***** define load current source model used in die model *****
				
				.param pwl_file_in_PA = str('/data/home/jiangongwei/work/PDN_core/hspice_inc/curr_profile_NNE_PA_x1Of4_240603.txt.csv') *** 1/4 of PA, Brad trace 240603 7.7us, repeatable 				
				.param pwl_file_in_MA = str('/data/home/jiangongwei/work/PDN_core/hspice_inc/curr_profile_NNE_GMT_x1Of4_240603.txt.csv')		*** 1/4 of GMT, jgwei created to mockup ramp ==> steady state pwr 12A, len match PA Brad trace 240603, repeatable
						
						
		*** idle current
		.param pwl_file_quiet = str('/data/home/jiangongwei/work/PDN_core/hspice_inc/curr_quiet_30us.txt.csv')



*** filter for measurement
.subckt meas_filter	
+ pin_in  ref_gnd 	hf  lf 

E_meas pin_meas ref_gnd  pin_in ref_gnd	1.0

C_hf pin_meas	hf  	160.p		
R_hf hf         ref_gnd 1k

R_lf pin_meas	lf		1k
C_lf lf 		ref_gnd	160.p
.ends meas_filter


	***** define die model *****
.subckt model_die_lumped_nne_tile
	+ pin_bump ref_gnd C_die=100n R_die_1=1.25m R_die_2=RESMIN R_leak=0.84	pwl_file_in = str(pwl_file_quiet) delay = 0.

	R_die_1_ 	pin_bump	2	R_die_1
	R_die_2_	2		3	R_die_2
	C_die_		3		ref_gnd	C_die 
	R_leak_		pin_bump	ref_gnd	R_leak	
	IcurrSrc	pin_bump	ref_gnd	PWL pwlfile = str(pwl_file_in) td = delay    *** add 'R' if repeat
.ends

* .inc /data/home/jiangongwei/work/PDN_core/hspice_inc/cpm_nne_240426_Redu_IdEM.cir		*** 240426 CPM reduced model 
.inc /data/home/jiangongwei/work/PDN_core/hspice_inc/cpm_nne_240523_modelOnly.spice

	***** define pkg model *****
	.inc /data/home/jiangongwei/work/PDN_core/hspice_inc/NNE_pkg_240522_DSC_tdk_3t_reduModel_IdEM.cir	*** 240522 Andes pkg, reduced model 		

	***** define PCB model *****
	.inc /data/home/jiangongwei/work/PDN_core/hspice_inc/ACM3_05032024_NNE_PDN_BGAgrpX6_IdEM.cir								*** ACM3 240503, only 10uF and 22uF, no bulkCap, originally for SIMPLIS sim, 6 BGA grps 
	
*************************************** Input params **************************
.param Vdd 	= 0.775

.param is_use_ecap_ebed = 0		*** value: 0 or 1, note: this could be baked in pkg model 
.param is_MIM 		= 1

.param die_model_sig = 0		*** value: 0 if multi grp model, 1 if single die grp model 
.param single_bga_grp = 0		*** value: 0 if use multiple BGA grps, 1 if use single BGA grp

.param is_use_3T_cap_ft = 1		*** value: 0 or 1, note: this could be baked in pkg model 

.param induct_eqvlnt_r =  0.m   *** DCR of inductor of ALL phases, use 0.0m if PMIC_opt ==3, use 0.07m if run ideal voltage src
.param PMIC_opt = 1				*** 1: ideal voltage src; 2:ideal voltage src w/ VCVS feedback; 3: voltage src using pwl 
*** NOTE: ONLY applicable if PMIC_opt == 3
.param volt_src = str('/data/home/jiangongwei/work/PDN_core/hspice_inc/vout_simplis_2mS_6xBGA_pkg240521.csv')
.param Vdd_shift_fr_pwl = 0.0
		
	*** not used when CPM is enabled 
	.para Cdie_coeff = 1.0				*** ONLY multi grp controlling, use 1.0 if no Cdie scaling, use 3.62 for NNE if MIM cap is added,  
	.para Rdie_coeff = 1.0				*** Rdie is constant 1. , rather than scaled by '1/data/home/jiangongwei/work/PDN_core/Cdie_coeff'

	*** Cdie Rdie based on MAM-242, tau = 24.26 (excluding MIM)
	.param Cdie_PA 	= '130.3n * Cdie_coeff'		
	.param Cdie_MA 	= '101.7n * Cdie_coeff'
	.param Rdie_PA 	= '0.186m * Rdie_coeff'
	.param Rdie_MA 	= '0.239m * Rdie_coeff'
	.param Rleak 	= 0.84
		
		* .param r_grid = 52e6.m			*** only applied when multi grp model, i.e. die_model_sig = 0 

.param is_ac_run = 1		*** 1 if impedance, 0 if transient 

.param tStep	= 10.p
.param tStop	= 20.u    

.param td_delay = 0.n
	
*************************************** End of User Input params **************

*************************************** cap model *****************************
.inc /data/home/jiangongwei/work/cap_models.hsp


*************************************** PMIC **********************************
*** ref_gnd def.
Vref_gnd 	ref_gnd		0	0.										*** normal gnd 

.subckt PMIC_model
+ pin_out ref_gnd fdbk_node opt = 1 vdd_pmic = 0.75 Vdd_shift= 0.0 t_delay = 0.n pwl_volt_in = str(volt_src)
	*** opt 1/3 ideal voltage src
		.if (opt == 1)
			VshortPMIC	pin_out	ref_gnd	vdd_pmic
		.endif 
	*** opt 2/3, add feedback
		.if (opt == 2)
			VshortPMIC_ref	pin_out_tmp	0 	vdd_pmic	*** ref contant voltage src 
			
			VshortPMIC	pin_out	pin_tmp	vdd_pmic
			E_fdbk	    pin_tmp	ref_gnd VCVS DELAY pin_out_tmp fdbk_node  TD=0.n			*** VCVS to model feedback using low freq signal 
		.endif 
	*** opt 3/3 voltage src waveform w/ shift 
		.if (opt == 3)
			Vpmic_wf     pin_out  pin_tmp  Vdd_shift					*** NOTE: shift waveform by constant voltage in V., use 0.0 if no shift 
			Vpmic_wf_pwl pin_tmp  ref_gnd PWL pwlfile = str(pwl_volt_in)   td = t_delay 
		.endif 
	*** 
.ends 


*** opt 1 ideal PMIC w/o remote sense feedback
.if ( 1 )
	xblk_PMIC pmic_pwr_raw ref_gnd pkg_bump_PA_ns_3_lf PMIC_model 
	+ opt = 'PMIC_opt'  vdd_pmic = 'Vdd' 	Vdd_shift = 'Vdd_shift_fr_pwl'		t_delay = 0.u 	pwl_volt_in = str(volt_src)		
.endif 
*** opt 2 EMpower simplified IVR equivalent model 	(remember to disable PMIC bulk caps on PCB)
.if ( 0 )
	VempowerVS	pmicEMpwrNode1	ref_gnd	Vdd		*** can be switched to PMIC model 
	LempowerVS1  pmicEMpwrNode1  pmicEMpwrNode2  	'0.027778n * 0.9091'  
	RempowerVS1  pmicEMpwrNode2  pmic_pwr_raw			50.u 
.endif 

*** resistance of pmic output cap
r_pmic_l_eqv pmic_pwr_raw pmic_pwr induct_eqvlnt_r

*************************************** Socket ********************************
Rskt	bga_pcb		bga_pkg		1.n				*** can add socket model 
																		

*************************************** PCB ***********************************
					*** debug to skip PCB 
					* R_short_pcb bga_pcb 	pmic_pwr	1.n

.if ( 1 )		***  ACM3 PCB, reduced to 5 ports
	*** 6 BGA ports
	.if (single_bga_grp != 1)
		* Xblk_PCB
		* + bga_pcb_0 
		* + pmic_pwr
		* + pmic_pwr
		* + pmic_pwr
		* + pmic_pwr
		* + bga_pcb_1
		* + bga_pcb_2
		* + bga_pcb_3
		* + bga_pcb_4		
		* + bga_pcb_5
		* + ref_gnd
		* + ACM3_05032024_NNE_PDN_BGAgrpX6_IdEM
		
				*** S-para (only for AC sim)
				.model pcb_spara_model S
				+ TSTONEFILE = '/data/home/jiangongwei/work/PDN_core/hspice_inc/ACM3_05032024_NNE_PDN_BGAgrpX6.s10p'
				+ FMAX= 1G
				
				S_blk_PCB
				+ bga_pcb_0 
				+ pmic_pwr
				+ pmic_pwr
				+ pmic_pwr
				+ pmic_pwr
				+ bga_pcb_1
				+ bga_pcb_2
				+ bga_pcb_3
				+ bga_pcb_4		
				+ bga_pcb_5
				+ ref_gnd
				+ mname = pcb_spara_model
				*** 
	.endif 
	.if (single_bga_grp == 1)
		Xblk_PCB
		+ bga_pcb
		+ pmic_pwr
		+ pmic_pwr
		+ pmic_pwr
		+ pmic_pwr
		+ bga_pcb
		+ bga_pcb
		+ bga_pcb
		+ bga_pcb
		+ bga_pcb
		+ ref_gnd	
		+ ACM3_05032024_NNE_PDN_BGAgrpX6_IdEM
	.endif 
		
				
.endif 		*** end of ACM3 PCB, reduced to 5 ports 


*************************************** Pkg ***********************************
.if ( 1 ) 	*** 240522 Andes pkg DSC, reduced model in ADS , PA west MA east   
	.if (single_bga_grp != 1)
		Xblk_pkg
		+ pkg_bump_MA_ns_0
		+ pkg_bump_MA_ns_1
		+ pkg_bump_MA_ns_2
		+ pkg_bump_MA_ns_3
		+ pkg_bump_PA_ns_0
		+ pkg_bump_PA_ns_1
		+ pkg_bump_PA_ns_2
		+ pkg_bump_PA_ns_3	
		+ bga_pcb_0
		+ bga_pcb_1
		+ bga_pcb_2
		+ bga_pcb_3
		+ bga_pcb_4
		+ bga_pcb_5
		+ ref_gnd
		+ NNE_pkg_240522_DSC_tdk_3t_reduModel_IdEM		

	.endif 

	.if (single_bga_grp == 1)
		Xblk_pkg
		+ pkg_bump_MA_ns_0
		+ pkg_bump_MA_ns_1
		+ pkg_bump_MA_ns_2
		+ pkg_bump_MA_ns_3
		+ pkg_bump_PA_ns_0
		+ pkg_bump_PA_ns_1
		+ pkg_bump_PA_ns_2
		+ pkg_bump_PA_ns_3	
		+ bga_pcb
		+ bga_pcb
		+ bga_pcb
		+ bga_pcb
		+ bga_pcb
		+ bga_pcb
		+ ref_gnd
		+ NNE_pkg_240522_DSC_tdk_3t_reduModel_IdEM			
	.endif 

	*** Ecap embedded, NOTE: this is just mock up, NOT real connection, connected on bumps, Optimistic !!		
		.if ( is_use_ecap_ebed == 1 )  *** use ecap embed
			xECAP_16600nF_core_2
			+ pkg_bump_PA_ns_3_
			+ pkg_bump_PA_ns_3_
			+ pkg_bump_PA_ns_3_
			+ pkg_bump_PA_ns_3_
			+ pkg_bump_PA_ns_3_
			+ pkg_bump_PA_ns_3_
			+ pkg_bump_PA_ns_3_
			+ pkg_bump_PA_ns_3_
			+ pkg_bump_PA_ns_3_
			+ pkg_bump_PA_ns_3_
			+ pkg_bump_PA_ns_3_
			+ pkg_bump_PA_ns_3_
			+ pkg_bump_PA_ns_3_
			+ pkg_bump_PA_ns_3_
			+ pkg_bump_PA_ns_3_
			+ pkg_bump_PA_ns_3_
			+ pkg_bump_PA_ns_3_
			+ pkg_bump_PA_ns_3_
			+ pkg_bump_PA_ns_3_
			+ pkg_bump_PA_ns_3_
			+ pkg_bump_PA_ns_3_
			+ pkg_bump_PA_ns_3_
			+ pkg_bump_PA_ns_3_
			+ pkg_bump_PA_ns_3_
			+ pkg_bump_PA_ns_3_
			+ pkg_bump_PA_ns_3_
			+ pkg_bump_PA_ns_3_
			+ pkg_bump_PA_ns_3_
			+ pkg_bump_PA_ns_3_
			+ pkg_bump_PA_ns_3_
			+ pkg_bump_PA_ns_3_
			+ pkg_bump_PA_ns_2_
			+ pkg_bump_PA_ns_2_
			+ pkg_bump_PA_ns_2_
			+ pkg_bump_PA_ns_2_
			+ pkg_bump_PA_ns_2_
			+ pkg_bump_PA_ns_2_
			+ pkg_bump_PA_ns_2_
			+ pkg_bump_PA_ns_2_
			+ pkg_bump_PA_ns_2_
			+ pkg_bump_PA_ns_2_
			+ pkg_bump_PA_ns_2_
			+ pkg_bump_PA_ns_2_
			+ pkg_bump_PA_ns_2_
			+ pkg_bump_PA_ns_2_
			+ pkg_bump_PA_ns_2_
			+ pkg_bump_PA_ns_2_
			+ pkg_bump_PA_ns_2_
			+ pkg_bump_PA_ns_2_
			+ pkg_bump_PA_ns_2_
			+ pkg_bump_PA_ns_2_
			+ pkg_bump_PA_ns_2_
			+ pkg_bump_PA_ns_2_
			+ pkg_bump_PA_ns_2_
			+ pkg_bump_PA_ns_2_
			+ pkg_bump_PA_ns_2_
			+ pkg_bump_PA_ns_2_
			+ pkg_bump_PA_ns_2_
			+ pkg_bump_PA_ns_2_
			+ pkg_bump_PA_ns_2_
			+ ref_gnd
			+ str(siCap_empwr_EC1005_16600nF)
			
			*** NOTE:  mouting L and R based on 24/1/31 Zijie layout w/ Ecap
			r_ecap_EC1005_half_2 	pkg_bump_PA_ns_2_		pkg_bump_PA_ns_2_tmp	6.u
			l_ecap_EC1005_half_2    pkg_bump_PA_ns_2_tmp	pkg_bump_PA_ns_2		4.p
			r_ecap_EC1005_half_3 	pkg_bump_PA_ns_3_		pkg_bump_PA_ns_3_tmp	6.u
			l_ecap_EC1005_half_3    pkg_bump_PA_ns_3_tmp	pkg_bump_PA_ns_3		4.p		
			
		.endif
		
.endif 


*************************************** Die ***********************************
*** approach 1: multi grp modeling 
.if (die_model_sig != 1 )

	xblk_die 
	+         pkg_bump_MA_ns_0
	+ ref_gnd pkg_bump_MA_ns_1
	+ ref_gnd pkg_bump_MA_ns_2
	+ ref_gnd pkg_bump_MA_ns_3
	+ ref_gnd pkg_bump_PA_ns_0
	+ ref_gnd pkg_bump_PA_ns_1
	+ ref_gnd pkg_bump_PA_ns_2
	+ ref_gnd pkg_bump_PA_ns_3
	+ ref_gnd	
	+ adsPowerModel_nne_240523
	
	IcurrSrc_0_0	pkg_bump_MA_ns_3	ref_gnd	PWL  pwlfile = str(pwl_file_in_MA)  td= 0.   R 	*** add 'R' if repeat
	IcurrSrc_0_1	pkg_bump_MA_ns_2	ref_gnd	PWL  pwlfile = str(pwl_file_in_MA)  td= 0.   R 
	IcurrSrc_0_2	pkg_bump_MA_ns_1	ref_gnd	PWL  pwlfile = str(pwl_file_in_MA)  td= 0.   R
	IcurrSrc_0_3	pkg_bump_MA_ns_0	ref_gnd	PWL  pwlfile = str(pwl_file_in_MA)  td= 0.   R
	
	IcurrSrc_1_0	pkg_bump_PA_ns_3	ref_gnd	PWL  pwlfile = str(pwl_file_in_PA)  td= td_delay   R 
	IcurrSrc_1_1	pkg_bump_PA_ns_2	ref_gnd	PWL  pwlfile = str(pwl_file_in_PA)  td= td_delay   R
	IcurrSrc_1_2	pkg_bump_PA_ns_1	ref_gnd	PWL  pwlfile = str(pwl_file_in_PA)  td= td_delay   R 
	IcurrSrc_1_3	pkg_bump_PA_ns_0	ref_gnd	PWL  pwlfile = str(pwl_file_in_PA)  td= td_delay   R

	*** R_leak ***
	

										*** test to short bumps to PCB 
											* R_0_bump_merge pkg_bump_one	pkg_bump_MA_ns_3	1.n 
											* R_1_bump_merge pkg_bump_one	pkg_bump_MA_ns_2	1.n 
											* R_2_bump_merge pkg_bump_one	pkg_bump_MA_ns_1	1.n
											* R_3_bump_merge pkg_bump_one	pkg_bump_MA_ns_0	1.n
											* R_4_bump_merge pkg_bump_one	pkg_bump_PA_ns_3	1.n
											* R_5_bump_merge pkg_bump_one	pkg_bump_PA_ns_2	1.n
											* R_6_bump_merge pkg_bump_one	pkg_bump_PA_ns_1	1.n
											* R_7_bump_merge pkg_bump_one	pkg_bump_PA_ns_0	1.n
											
											* R_bump_to_PCB  pkg_bump_one bga_pcb	1.n	
										*** test to short bumps to PCB   end 
	
	.if (is_MIM == 1)
		C_MIM_bump_0_0 pkg_bump_MA_ns_3	ref_gnd	273.3n
		C_MIM_bump_0_1 pkg_bump_MA_ns_2	ref_gnd	273.3n
		C_MIM_bump_0_2 pkg_bump_MA_ns_1	ref_gnd	273.3n
		C_MIM_bump_0_3 pkg_bump_MA_ns_0	ref_gnd	273.3n
		
		C_MIM_bump_1_0 pkg_bump_PA_ns_3	ref_gnd	334.1n
		C_MIM_bump_1_1 pkg_bump_PA_ns_2	ref_gnd	334.1n
		C_MIM_bump_1_2 pkg_bump_PA_ns_1	ref_gnd	334.1n
		C_MIM_bump_1_3 pkg_bump_PA_ns_0	ref_gnd	334.1n		
	.endif 
	
		* Xblk_die_0_0	pkg_bump_MA_ns_3	ref_gnd	model_die_lumped_nne_tile	C_die= 'Cdie_MA'	R_die_1= 'Rdie_MA' 	R_die_2= 1.e-5	R_leak= 'Rleak'		pwl_file_in = str(pwl_file_in_MA)
		* Xblk_die_0_1	pkg_bump_MA_ns_2	ref_gnd	model_die_lumped_nne_tile	C_die= 'Cdie_MA'	R_die_1= 'Rdie_MA' 	R_die_2= 1.e-5	R_leak= 'Rleak'		pwl_file_in = str(pwl_file_in_MA)
		* Xblk_die_0_2	pkg_bump_MA_ns_1	ref_gnd	model_die_lumped_nne_tile	C_die= 'Cdie_MA'	R_die_1= 'Rdie_MA' 	R_die_2= 1.e-5	R_leak= 'Rleak'		pwl_file_in = str(pwl_file_in_MA)
		* Xblk_die_0_3	pkg_bump_MA_ns_0	ref_gnd	model_die_lumped_nne_tile	C_die= 'Cdie_MA'	R_die_1= 'Rdie_MA' 	R_die_2= 1.e-5	R_leak= 'Rleak'		pwl_file_in = str(pwl_file_in_MA)
		* Xblk_die_1_0	pkg_bump_PA_ns_3	ref_gnd	model_die_lumped_nne_tile	C_die= 'Cdie_PA'	R_die_1= 'Rdie_PA' 	R_die_2= 1.e-5	R_leak= 'Rleak'		pwl_file_in = str(pwl_file_in_PA) delay = 0.p		* 1500.p
		* Xblk_die_1_1	pkg_bump_PA_ns_2	ref_gnd	model_die_lumped_nne_tile	C_die= 'Cdie_PA'	R_die_1= 'Rdie_PA' 	R_die_2= 1.e-5	R_leak= 'Rleak'		pwl_file_in = str(pwl_file_in_PA) delay = 0.p		* 1000.p
		* Xblk_die_1_2	pkg_bump_PA_ns_1	ref_gnd	model_die_lumped_nne_tile	C_die= 'Cdie_PA'	R_die_1= 'Rdie_PA' 	R_die_2= 1.e-5	R_leak= 'Rleak'		pwl_file_in = str(pwl_file_in_PA) delay = 0.p		* 500.p
		* Xblk_die_1_3	pkg_bump_PA_ns_0	ref_gnd	model_die_lumped_nne_tile	C_die= 'Cdie_PA'	R_die_1= 'Rdie_PA' 	R_die_2= 1.e-5	R_leak= 'Rleak'		pwl_file_in = str(pwl_file_in_PA) delay = 0.p

.endif 
*** approach 1: multi grp modeling END  	

*** approach 2: single grp modeling	
.if (die_model_sig == 1 )
	*** all bump grps connected to single die model 
	R_0_bump_merge pkg_bump_one	pkg_bump_MA_ns_3	1.n 
	R_1_bump_merge pkg_bump_one	pkg_bump_MA_ns_2	1.n 
	R_2_bump_merge pkg_bump_one	pkg_bump_MA_ns_1	1.n
	R_3_bump_merge pkg_bump_one	pkg_bump_MA_ns_0	1.n
	R_4_bump_merge pkg_bump_one	pkg_bump_PA_ns_3	1.n
	R_5_bump_merge pkg_bump_one	pkg_bump_PA_ns_2	1.n
	R_6_bump_merge pkg_bump_one	pkg_bump_PA_ns_1	1.n
	R_7_bump_merge pkg_bump_one	pkg_bump_PA_ns_0	1.n
	
    .if (is_MIM == 1) 
		Xblk_die_0_0	pkg_bump_one	ref_gnd	model_die_lumped_nne_tile	C_die= 3462.n	R_die_1= 0.018m R_die_2= 1.n	R_leak= 1.e6		pwl_file_in = str(pwl_file_All)		*** w/ MIM
	.endif 
	.if (is_MIM != 1 )
	  Xblk_die_0_0	pkg_bump_one	ref_gnd	model_die_lumped_nne_tile	C_die= 1310.n	R_die_1= 0.018m R_die_2= 1.n	R_leak= 1.e6		pwl_file_in = str(pwl_file_All)
	.endif 
	
.endif 
*** approach 2: single grp modeling	END


X_probe_filter10
+ pkg_bump_PA_ns_3
+ ref_gnd
+ pkg_bump_PA_ns_3_hf 
+ pkg_bump_PA_ns_3_lf
+ meas_filter

X_probe_filter13
+ pkg_bump_PA_ns_0
+ ref_gnd
+ pkg_bump_PA_ns_0_hf 
+ pkg_bump_PA_ns_0_lf
+ meas_filter

.if (single_bga_grp !=1 )
	X_probe_filter_bga_0
	+ bga_pcb_0
	+ ref_gnd
	+ bga_pcb_0_hf 
	+ bga_pcb_0_lf
	+ meas_filter
.endif 
.if (single_bga_grp ==1 )
	X_probe_filter_bga
	+ bga_pcb
	+ ref_gnd
	+ bga_pcb_hf 
	+ bga_pcb_lf
	+ meas_filter
.endif 

*************************************** Analysis I: AC simulation *************
.if ( is_ac_run == 1 )
	.if ( 1 )
		*** NOTE: DO not include port def if tran analysis later
		P1 pkg_bump_MA_ns_3	ref_gnd	port=1	z0 = 0.1
		P2 pkg_bump_MA_ns_2	ref_gnd	port=2	z0 = 0.1
		P3 pkg_bump_MA_ns_1	ref_gnd	port=3	z0 = 0.1
		P4 pkg_bump_MA_ns_0	ref_gnd	port=4	z0 = 0.1
		P5 pkg_bump_PA_ns_3	ref_gnd	port=5	z0 = 0.1
		P6 pkg_bump_PA_ns_2	ref_gnd	port=6	z0 = 0.1
		P7 pkg_bump_PA_ns_1	ref_gnd	port=7	z0 = 0.1
		P8 pkg_bump_PA_ns_0	ref_gnd	port=8	z0 = 0.1

		
		.lin 	sparcalc=1 	filename=impedance_plot	noisecalc=0 	gdcalc=0	format=touchstone 	dataformat=MA 
		**.probe  ac s11(db) s11(p) s21(db) s21(p) 
		.probe ac zin(1)(m) zin(1)(p) zin(5)(m) zin(5)(p) zin(8)(m) zin(8)(p) 
		
		.ac 	dec 50 1. 1.G
			
	.endif 

.endif 

*************************************** Analysis II: Transient simulation *****
.if ( is_ac_run != 1 )
	.tran tStep tSTOP 

	.probe tran v(pkg_bump_PA_ns_3) v(pkg_bump_PA_ns_0) v(pkg_bump_MA_ns_3) v(pkg_bump_MA_ns_0)  
	.probe tran v(bga_pkg) v(bga_pcb) v(bga_pcb_0) v(bga_pcb_1) v(bga_pcb_2) v(bga_pcb_3) v(bga_pcb_4) v(bga_pcb_5)
	.probe tran v(bga_pcb_0_hf) v(bga_pcb_0_lf) v(bga_pcb_hf) v(bga_pcb_lf)   
	
	
	* .probe tran v(pkg_bump_PA_ns_2) v(pkg_bump_PA_ns_1)
	.probe tran v(pkg_bump_PA_ns_3_hf)  v(pkg_bump_PA_ns_3_lf)
	.probe tran v(pkg_bump_PA_ns_0_hf)  v(pkg_bump_PA_ns_0_lf)
	.probe tran v(pmic_pwr)
	
	.probe x(Xblk_die_1_0.pin_bump)	x(Xblk_PCB.a_1)	x(Xblk_pkg.a_1)
	.probe x(Xblk_pkg.a_9)  x(Xblk_pkg.a_10)   x(Xblk_pkg.a_11) 
	.probe x(xblk_PMIC.pin_out)


	* .param vdd_meas_start = 0.u
	* .param vdd_meas_end   = 3.u      ** 50.u
	* .meas tran pkg_bump_1_0_p2p 		PP	V(pkg_bump_PA_ns_3)	from='vdd_meas_start' to='vdd_meas_end'
	* .meas tran pkg_bump_1_0_cpu_vmax	MAX	V(pkg_bump_PA_ns_3)	from='vdd_meas_start' to='vdd_meas_end'
	* .meas tran pkg_bump_1_0_cpu_vmin	MIN	V(pkg_bump_PA_ns_3)	from='vdd_meas_start' to='vdd_meas_end'
	* .meas tran pkg_bump_1_0_cpu_vmax_t	WHEN	V(pkg_bump_PA_ns_3) = 'pkg_bump_1_0_cpu_vmax' 	from='vdd_meas_start' to='vdd_meas_end'
	* .meas tran pkg_bump_1_0_cpu_vmin_t	WHEN	V(pkg_bump_PA_ns_3) = 'pkg_bump_1_0_cpu_vmin' 	from='vdd_meas_start' to='vdd_meas_end'	

	*.probe i(*)
	*.probe x(*)

.endif 